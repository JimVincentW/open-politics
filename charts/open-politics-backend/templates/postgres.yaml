{{ if .Values.postgres.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: "postgres"
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: postgres
  selector:
    app: "postgres"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "postgres"
spec:
  selector:
    matchLabels:
      app: "postgres"
  replicas: 1
  template:
    metadata:
      labels:
        app: "postgres"
    spec:
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data
            readOnly: false
      containers:
        - name: "postgres"
          image: "postgres:13.1"
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
              readOnly: false
              subPath: data
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: "postgres-auth"
                  key: "database"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: "postgres-auth"
                  key: "username"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "postgres-auth"
                  key: "password"
          livenessProbe:
            exec:
              command:
                - pg_isready
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - pg_isready
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "postgres-data"
spec:
  storageClassName: {{ .Values.general.storageClass | quote }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "1Gi"
---
apiVersion: v1
kind: Secret
metadata:
  name: "postgres-auth"
type: Opaque
data:
  database: {{ .Values.postgres.auth.database | b64enc | quote }}
  username: {{ .Values.postgres.auth.username | b64enc | quote }}
  password: {{ "my-super-secret-postgres-password" | b64enc | quote }} # Should be auto generated in the future
---
{{ else }}
apiVersion: v1
kind: Secret
metadata:
  name: "external-database"
type: Opaque
data:
  host: {{ .Values.externalDatabase.host | b64enc | quote }}
  port: {{ .Values.externalDatabase.port | b64enc | quote }}
  database: {{ .Values.externalDatabase.database | b64enc | quote }}"
  username: {{ .Values.externalDatabase.user | b64enc | quote }}
  password: {{ .Values.externalDatabase.password | b64enc | quote }}
{{ end }}