{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@radix-ui/react-id/dist/packages/react/id/src/index.ts","/turbopack/[project]/node_modules/@radix-ui/react-id/dist/packages/react/id/src/id.tsx"],"sourcesContent":["export { useId } from './id';\n","import * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n// We `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\nconst useReactId = (React as any)['useId'.toString()] || (() => undefined);\nlet count = 0;\n\nfunction useId(deterministicId?: string): string {\n  const [id, setId] = React.useState<string | undefined>(useReactId());\n  // React versions older than 18 will have client-side ids only.\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\n\nexport { useId };\n"],"names":["useReactId","React","toString","undefined","count","useId","deterministicId","id","setId","useState","useLayoutEffect","reactId","String"],"mappings":";;;;;;;;ACIA,MAAMA,mCAAcC,+MAAD,CAAe,QAAQC,QAAR,GAAf,IAAuC,CAAA,IAAMC,SAA7C;AACnB,IAAIC,8BAAQ;AAEZ,SAASC,0CAAMC,eAAf;IACE,MAAM,CAACC,IAAIC,MAAL,GAAcP,gNAAMQ,QAAN,CAAmCT,qCACvD,+DADA;IAEAU,CAAAA,GAAAA,mLAAAA,CAAAA,kBAAe,AAAfA,EAAgB;QACd,IAAI,CAACJ,iBAAiBE,MAAOG,CAAAA,UAAYA,YAAb,QAAaA,YAAb,KAAA,IAAaA,UAAWC,OAAOR;OAC1D;QAACE;KAFW;IAGf,OAAOA,mBAAoBC,CAAAA,KAAM,CAAA,MAAA,EAAQA,GAAG,CAAf,GAAmB,EAA1B"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@radix-ui/react-focus-scope/dist/packages/react/focus-scope/src/index.ts","/turbopack/[project]/node_modules/@radix-ui/react-focus-scope/dist/packages/react/focus-scope/src/FocusScope.tsx"],"sourcesContent":["export {\n  FocusScope,\n  //\n  Root,\n} from './FocusScope';\nexport type { FocusScopeProps } from './FocusScope';\n","import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\nconst AUTOFOCUS_ON_MOUNT = 'focusScope.autoFocusOnMount';\nconst AUTOFOCUS_ON_UNMOUNT = 'focusScope.autoFocusOnUnmount';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\ntype FocusableTarget = HTMLElement | { focus(): void };\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope\n * -----------------------------------------------------------------------------------------------*/\n\nconst FOCUS_SCOPE_NAME = 'FocusScope';\n\ntype FocusScopeElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface FocusScopeProps extends PrimitiveDivProps {\n  /**\n   * When `true`, tabbing from last item will focus first tabbable\n   * and shift+tab from first item will focus last tababble.\n   * @defaultValue false\n   */\n  loop?: boolean;\n\n  /**\n   * When `true`, focus cannot escape the focus scope via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapped?: boolean;\n\n  /**\n   * Event handler called when auto-focusing on mount.\n   * Can be prevented.\n   */\n  onMountAutoFocus?: (event: Event) => void;\n\n  /**\n   * Event handler called when auto-focusing on unmount.\n   * Can be prevented.\n   */\n  onUnmountAutoFocus?: (event: Event) => void;\n}\n\nconst FocusScope = React.forwardRef<FocusScopeElement, FocusScopeProps>((props, forwardedRef) => {\n  const {\n    loop = false,\n    trapped = false,\n    onMountAutoFocus: onMountAutoFocusProp,\n    onUnmountAutoFocus: onUnmountAutoFocusProp,\n    ...scopeProps\n  } = props;\n  const [container, setContainer] = React.useState<HTMLElement | null>(null);\n  const onMountAutoFocus = useCallbackRef(onMountAutoFocusProp);\n  const onUnmountAutoFocus = useCallbackRef(onUnmountAutoFocusProp);\n  const lastFocusedElementRef = React.useRef<HTMLElement | null>(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContainer(node));\n\n  const focusScope = React.useRef({\n    paused: false,\n    pause() {\n      this.paused = true;\n    },\n    resume() {\n      this.paused = false;\n    },\n  }).current;\n\n  // Takes care of trapping focus if focus is moved outside programmatically for example\n  React.useEffect(() => {\n    if (trapped) {\n      function handleFocusIn(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        const target = event.target as HTMLElement | null;\n        if (container.contains(target)) {\n          lastFocusedElementRef.current = target;\n        } else {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      function handleFocusOut(event: FocusEvent) {\n        if (focusScope.paused || !container) return;\n        const relatedTarget = event.relatedTarget as HTMLElement | null;\n\n        // A `focusout` event with a `null` `relatedTarget` will happen in at least two cases:\n        //\n        // 1. When the user switches app/tabs/windows/the browser itself loses focus.\n        // 2. In Google Chrome, when the focused element is removed from the DOM.\n        //\n        // We let the browser do its thing here because:\n        //\n        // 1. The browser already keeps a memory of what's focused for when the page gets refocused.\n        // 2. In Google Chrome, if we try to focus the deleted focused element (as per below), it\n        //    throws the CPU to 100%, so we avoid doing anything for this reason here too.\n        if (relatedTarget === null) return;\n\n        // If the focus has moved to an actual legitimate element (`relatedTarget !== null`)\n        // that is outside the container, we move focus to the last valid focused element inside.\n        if (!container.contains(relatedTarget)) {\n          focus(lastFocusedElementRef.current, { select: true });\n        }\n      }\n\n      // When the focused element gets removed from the DOM, browsers move focus\n      // back to the document.body. In this case, we move focus to the container\n      // to keep focus trapped correctly.\n      function handleMutations(mutations: MutationRecord[]) {\n        const focusedElement = document.activeElement as HTMLElement | null;\n        if (focusedElement !== document.body) return;\n        for (const mutation of mutations) {\n          if (mutation.removedNodes.length > 0) focus(container);\n        }\n      }\n\n      document.addEventListener('focusin', handleFocusIn);\n      document.addEventListener('focusout', handleFocusOut);\n      const mutationObserver = new MutationObserver(handleMutations);\n      if (container) mutationObserver.observe(container, { childList: true, subtree: true });\n\n      return () => {\n        document.removeEventListener('focusin', handleFocusIn);\n        document.removeEventListener('focusout', handleFocusOut);\n        mutationObserver.disconnect();\n      };\n    }\n  }, [trapped, container, focusScope.paused]);\n\n  React.useEffect(() => {\n    if (container) {\n      focusScopesStack.add(focusScope);\n      const previouslyFocusedElement = document.activeElement as HTMLElement | null;\n      const hasFocusedCandidate = container.contains(previouslyFocusedElement);\n\n      if (!hasFocusedCandidate) {\n        const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS);\n        container.addEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n        container.dispatchEvent(mountEvent);\n        if (!mountEvent.defaultPrevented) {\n          focusFirst(removeLinks(getTabbableCandidates(container)), { select: true });\n          if (document.activeElement === previouslyFocusedElement) {\n            focus(container);\n          }\n        }\n      }\n\n      return () => {\n        container.removeEventListener(AUTOFOCUS_ON_MOUNT, onMountAutoFocus);\n\n        // We hit a react bug (fixed in v17) with focusing in unmount.\n        // We need to delay the focus a little to get around it for now.\n        // See: https://github.com/facebook/react/issues/17894\n        setTimeout(() => {\n          const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS);\n          container.addEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n          container.dispatchEvent(unmountEvent);\n          if (!unmountEvent.defaultPrevented) {\n            focus(previouslyFocusedElement ?? document.body, { select: true });\n          }\n          // we need to remove the listener after we `dispatchEvent`\n          container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus);\n\n          focusScopesStack.remove(focusScope);\n        }, 0);\n      };\n    }\n  }, [container, onMountAutoFocus, onUnmountAutoFocus, focusScope]);\n\n  // Takes care of looping focus (when tabbing whilst at the edges)\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (!loop && !trapped) return;\n      if (focusScope.paused) return;\n\n      const isTabKey = event.key === 'Tab' && !event.altKey && !event.ctrlKey && !event.metaKey;\n      const focusedElement = document.activeElement as HTMLElement | null;\n\n      if (isTabKey && focusedElement) {\n        const container = event.currentTarget as HTMLElement;\n        const [first, last] = getTabbableEdges(container);\n        const hasTabbableElementsInside = first && last;\n\n        // we can only wrap focus if we have tabbable edges\n        if (!hasTabbableElementsInside) {\n          if (focusedElement === container) event.preventDefault();\n        } else {\n          if (!event.shiftKey && focusedElement === last) {\n            event.preventDefault();\n            if (loop) focus(first, { select: true });\n          } else if (event.shiftKey && focusedElement === first) {\n            event.preventDefault();\n            if (loop) focus(last, { select: true });\n          }\n        }\n      }\n    },\n    [loop, trapped, focusScope.paused]\n  );\n\n  return (\n    <Primitive.div tabIndex={-1} {...scopeProps} ref={composedRefs} onKeyDown={handleKeyDown} />\n  );\n});\n\nFocusScope.displayName = FOCUS_SCOPE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Attempts focusing the first element in a list of candidates.\n * Stops when focus has actually moved.\n */\nfunction focusFirst(candidates: HTMLElement[], { select = false } = {}) {\n  const previouslyFocusedElement = document.activeElement;\n  for (const candidate of candidates) {\n    focus(candidate, { select });\n    if (document.activeElement !== previouslyFocusedElement) return;\n  }\n}\n\n/**\n * Returns the first and last tabbable elements inside a container.\n */\nfunction getTabbableEdges(container: HTMLElement) {\n  const candidates = getTabbableCandidates(container);\n  const first = findVisible(candidates, container);\n  const last = findVisible(candidates.reverse(), container);\n  return [first, last] as const;\n}\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\n\n/**\n * Returns the first visible element in a list.\n * NOTE: Only checks visibility up to the `container`.\n */\nfunction findVisible(elements: HTMLElement[], container: HTMLElement) {\n  for (const element of elements) {\n    // we stop checking if it's hidden at the `container` level (excluding)\n    if (!isHidden(element, { upTo: container })) return element;\n  }\n}\n\nfunction isHidden(node: HTMLElement, { upTo }: { upTo?: HTMLElement }) {\n  if (getComputedStyle(node).visibility === 'hidden') return true;\n  while (node) {\n    // we stop at `upTo` (excluding it)\n    if (upTo !== undefined && node === upTo) return false;\n    if (getComputedStyle(node).display === 'none') return true;\n    node = node.parentElement as HTMLElement;\n  }\n  return false;\n}\n\nfunction isSelectableInput(element: any): element is FocusableTarget & { select: () => void } {\n  return element instanceof HTMLInputElement && 'select' in element;\n}\n\nfunction focus(element?: FocusableTarget | null, { select = false } = {}) {\n  // only focus if that element is focusable\n  if (element && element.focus) {\n    const previouslyFocusedElement = document.activeElement;\n    // NOTE: we prevent scrolling on focus, to minimize jarring transitions for users\n    element.focus({ preventScroll: true });\n    // only select if its not the same element, it supports selection and we need to select\n    if (element !== previouslyFocusedElement && isSelectableInput(element) && select)\n      element.select();\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * FocusScope stack\n * -----------------------------------------------------------------------------------------------*/\n\ntype FocusScopeAPI = { paused: boolean; pause(): void; resume(): void };\nconst focusScopesStack = createFocusScopesStack();\n\nfunction createFocusScopesStack() {\n  /** A stack of focus scopes, with the active one at the top */\n  let stack: FocusScopeAPI[] = [];\n\n  return {\n    add(focusScope: FocusScopeAPI) {\n      // pause the currently active focus scope (at the top of the stack)\n      const activeFocusScope = stack[0];\n      if (focusScope !== activeFocusScope) {\n        activeFocusScope?.pause();\n      }\n      // remove in case it already exists (because we'll re-add it at the top of the stack)\n      stack = arrayRemove(stack, focusScope);\n      stack.unshift(focusScope);\n    },\n\n    remove(focusScope: FocusScopeAPI) {\n      stack = arrayRemove(stack, focusScope);\n      stack[0]?.resume();\n    },\n  };\n}\n\nfunction arrayRemove<T>(array: T[], item: T) {\n  const updatedArray = [...array];\n  const index = updatedArray.indexOf(item);\n  if (index !== -1) {\n    updatedArray.splice(index, 1);\n  }\n  return updatedArray;\n}\n\nfunction removeLinks(items: HTMLElement[]) {\n  return items.filter((item) => item.tagName !== 'A');\n}\n\nconst Root = FocusScope;\n\nexport {\n  FocusScope,\n  //\n  Root,\n};\nexport type { FocusScopeProps };\n"],"names":["AUTOFOCUS_ON_MOUNT","AUTOFOCUS_ON_UNMOUNT","EVENT_OPTIONS","bubbles","cancelable","FOCUS_SCOPE_NAME","FocusScope","React","props","forwardedRef","loop","trapped","onMountAutoFocus","onMountAutoFocusProp","onUnmountAutoFocus","onUnmountAutoFocusProp","scopeProps","container","setContainer","useCallbackRef","lastFocusedElementRef","composedRefs","useComposedRefs","node","focusScope","paused","pause","resume","current","handleFocusIn","event","target","contains","focus","select","handleFocusOut","relatedTarget","handleMutations","mutations","focusedElement","document","activeElement","body","mutation","removedNodes","length","addEventListener","mutationObserver","MutationObserver","observe","childList","subtree","removeEventListener","disconnect","focusScopesStack","add","previouslyFocusedElement","hasFocusedCandidate","mountEvent","CustomEvent","dispatchEvent","defaultPrevented","focusFirst","removeLinks","getTabbableCandidates","setTimeout","unmountEvent","remove","handleKeyDown","isTabKey","key","altKey","ctrlKey","metaKey","currentTarget","first","last","getTabbableEdges","hasTabbableElementsInside","preventDefault","shiftKey","candidates","candidate","findVisible","reverse","nodes","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","isHiddenInput","tagName","type","disabled","hidden","FILTER_SKIP","tabIndex","FILTER_ACCEPT","nextNode","push","currentNode","elements","element","isHidden","upTo","getComputedStyle","visibility","undefined","display","parentElement","isSelectableInput","HTMLInputElement","preventScroll","createFocusScopesStack","stack","activeFocusScope","arrayRemove","unshift","array","item","updatedArray","index","indexOf","splice","items","filter","Root"],"mappings":"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"}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@radix-ui/react-focus-guards/dist/packages/react/focus-guards/src/index.ts","/turbopack/[project]/node_modules/@radix-ui/react-focus-guards/dist/packages/react/focus-guards/src/FocusGuards.tsx"],"sourcesContent":["export {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n} from './FocusGuards';\n","import * as React from 'react';\n\n/** Number of components which have requested interest to have focus guards */\nlet count = 0;\n\nfunction FocusGuards(props: any) {\n  useFocusGuards();\n  return props.children;\n}\n\n/**\n * Injects a pair of focus guards at the edges of the whole DOM tree\n * to ensure `focusin` & `focusout` events can be caught consistently.\n */\nfunction useFocusGuards() {\n  React.useEffect(() => {\n    const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');\n    document.body.insertAdjacentElement('afterbegin', edgeGuards[0] ?? createFocusGuard());\n    document.body.insertAdjacentElement('beforeend', edgeGuards[1] ?? createFocusGuard());\n    count++;\n\n    return () => {\n      if (count === 1) {\n        document.querySelectorAll('[data-radix-focus-guard]').forEach((node) => node.remove());\n      }\n      count--;\n    };\n  }, []);\n}\n\nfunction createFocusGuard() {\n  const element = document.createElement('span');\n  element.setAttribute('data-radix-focus-guard', '');\n  element.tabIndex = 0;\n  element.style.cssText = 'outline: none; opacity: 0; position: fixed; pointer-events: none';\n  return element;\n}\n\nconst Root = FocusGuards;\n\nexport {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n};\n"],"names":["count","FocusGuards","props","useFocusGuards","children","React","edgeGuards","document","querySelectorAll","body","insertAdjacentElement","createFocusGuard","forEach","node","remove","element","createElement","setAttribute","tabIndex","style","cssText","Root"],"mappings":";;;;;;;;ACEA,4EAAA,GACA,IAAIA,8BAAQ;AAEZ,SAASC,0CAAYC,KAArB;IACEC;IACA,OAAOD,MAAME,QAAb;;AAGF;;;IAIA,SAASD;IACPE,CAAAA,GAAAA,+MAAAA,CAAAA,YAAA,AAAAA,EAAgB;QAAM,IAAA,cAAA;QACpB,MAAMC,aAAaC,SAASC,gBAAT,CAA0B;QAC7CD,SAASE,IAAT,CAAcC,qBAAd,CAAoC,cAApC,CAAA,eAAkDJ,UAAU,CAAC,EAA7D,MAAA,QAAA,iBAAA,KAAA,IAAA,eAAmEK;QACnEJ,SAASE,IAAT,CAAcC,qBAAd,CAAoC,aAApC,CAAA,gBAAiDJ,UAAU,CAAC,EAA5D,MAAA,QAAA,kBAAA,KAAA,IAAA,gBAAkEK;QAClEX;QAEA,OAAO;YACL,IAAIA,gCAAU,GACZO,SAASC,gBAAT,CAA0B,4BAA4BI,OAAtD,CAA+DC,CAAAA,OAASA,KAAKC,MAAL;YAE1Ed;;OAED,EAZH;;AAeF,SAASW;IACP,MAAMI,UAAUR,SAASS,aAAT,CAAuB;IACvCD,QAAQE,YAAR,CAAqB,0BAA0B;IAC/CF,QAAQG,QAAR,GAAmB;IACnBH,QAAQI,KAAR,CAAcC,OAAd,GAAwB;IACxB,OAAOL;;AAGT,MAAMM,4CAAOpB"}},
    {"offset": {"line": 365, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 370, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@radix-ui/react-dialog/dist/packages/react/dialog/src/index.ts","/turbopack/[project]/node_modules/@radix-ui/react-dialog/dist/packages/react/dialog/src/Dialog.tsx"],"sourcesContent":["export {\n  createDialogScope,\n  //\n  Dialog,\n  DialogTrigger,\n  DialogPortal,\n  DialogOverlay,\n  DialogContent,\n  DialogTitle,\n  DialogDescription,\n  DialogClose,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Title,\n  Description,\n  Close,\n  //\n  WarningProvider,\n} from './Dialog';\nexport type {\n  DialogProps,\n  DialogTriggerProps,\n  DialogPortalProps,\n  DialogOverlayProps,\n  DialogContentProps,\n  DialogTitleProps,\n  DialogDescriptionProps,\n  DialogCloseProps,\n} from './Dialog';\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContext, createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport { hideOthers } from 'aria-hidden';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog\n * -----------------------------------------------------------------------------------------------*/\n\nconst DIALOG_NAME = 'Dialog';\n\ntype ScopedProps<P> = P & { __scopeDialog?: Scope };\nconst [createDialogContext, createDialogScope] = createContextScope(DIALOG_NAME);\n\ntype DialogContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentRef: React.RefObject<DialogContentElement>;\n  contentId: string;\n  titleId: string;\n  descriptionId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n};\n\nconst [DialogProvider, useDialogContext] = createDialogContext<DialogContextValue>(DIALOG_NAME);\n\ninterface DialogProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n}\n\nconst Dialog: React.FC<DialogProps> = (props: ScopedProps<DialogProps>) => {\n  const {\n    __scopeDialog,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = true,\n  } = props;\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const contentRef = React.useRef<DialogContentElement>(null);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <DialogProvider\n      scope={__scopeDialog}\n      triggerRef={triggerRef}\n      contentRef={contentRef}\n      contentId={useId()}\n      titleId={useId()}\n      descriptionId={useId()}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      modal={modal}\n    >\n      {children}\n    </DialogProvider>\n  );\n};\n\nDialog.displayName = DIALOG_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DialogTrigger';\n\ntype DialogTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DialogTriggerProps extends PrimitiveButtonProps {}\n\nconst DialogTrigger = React.forwardRef<DialogTriggerElement, DialogTriggerProps>(\n  (props: ScopedProps<DialogTriggerProps>, forwardedRef) => {\n    const { __scopeDialog, ...triggerProps } = props;\n    const context = useDialogContext(TRIGGER_NAME, __scopeDialog);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n    return (\n      <Primitive.button\n        type=\"button\"\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n  }\n);\n\nDialogTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'DialogPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createDialogContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface DialogPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogPortal: React.FC<DialogPortalProps> = (props: ScopedProps<DialogPortalProps>) => {\n  const { __scopeDialog, forceMount, children, container } = props;\n  const context = useDialogContext(PORTAL_NAME, __scopeDialog);\n  return (\n    <PortalProvider scope={__scopeDialog} forceMount={forceMount}>\n      {React.Children.map(children, (child) => (\n        <Presence present={forceMount || context.open}>\n          <PortalPrimitive asChild container={container}>\n            {child}\n          </PortalPrimitive>\n        </Presence>\n      ))}\n    </PortalProvider>\n  );\n};\n\nDialogPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nconst OVERLAY_NAME = 'DialogOverlay';\n\ntype DialogOverlayElement = DialogOverlayImplElement;\ninterface DialogOverlayProps extends DialogOverlayImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogOverlay = React.forwardRef<DialogOverlayElement, DialogOverlayProps>(\n  (props: ScopedProps<DialogOverlayProps>, forwardedRef) => {\n    const portalContext = usePortalContext(OVERLAY_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, props.__scopeDialog);\n    return context.modal ? (\n      <Presence present={forceMount || context.open}>\n        <DialogOverlayImpl {...overlayProps} ref={forwardedRef} />\n      </Presence>\n    ) : null;\n  }\n);\n\nDialogOverlay.displayName = OVERLAY_NAME;\n\ntype DialogOverlayImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DialogOverlayImplProps extends PrimitiveDivProps {}\n\nconst DialogOverlayImpl = React.forwardRef<DialogOverlayImplElement, DialogOverlayImplProps>(\n  (props: ScopedProps<DialogOverlayImplProps>, forwardedRef) => {\n    const { __scopeDialog, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, __scopeDialog);\n    return (\n      // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`\n      // ie. when `Overlay` and `Content` are siblings\n      <RemoveScroll as={Slot} allowPinchZoom shards={[context.contentRef]}>\n        <Primitive.div\n          data-state={getState(context.open)}\n          {...overlayProps}\n          ref={forwardedRef}\n          // We re-enable pointer-events prevented by `Dialog.Content` to allow scrolling the overlay.\n          style={{ pointerEvents: 'auto', ...overlayProps.style }}\n        />\n      </RemoveScroll>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DialogContent';\n\ntype DialogContentElement = DialogContentTypeElement;\ninterface DialogContentProps extends DialogContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogContent = React.forwardRef<DialogContentElement, DialogContentProps>(\n  (props: ScopedProps<DialogContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.modal ? (\n          <DialogContentModal {...contentProps} ref={forwardedRef} />\n        ) : (\n          <DialogContentNonModal {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nDialogContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentTypeElement = DialogContentImplElement;\ninterface DialogContentTypeProps\n  extends Omit<DialogContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {}\n\nconst DialogContentModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, context.contentRef, contentRef);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure focus isn't trapped once `DialogContent` has been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        disableOutsidePointerEvents\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          event.preventDefault();\n          context.triggerRef.current?.focus();\n        })}\n        onPointerDownOutside={composeEventHandlers(props.onPointerDownOutside, (event) => {\n          const originalEvent = event.detail.originalEvent;\n          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n          // If the event is a right-click, we shouldn't close because\n          // it is effectively as if we right-clicked the `Overlay`.\n          if (isRightClick) event.preventDefault();\n        })}\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) =>\n          event.preventDefault()\n        )}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst DialogContentNonModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const hasInteractedOutsideRef = React.useRef(false);\n    const hasPointerDownOutsideRef = React.useRef(false);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={forwardedRef}\n        trapFocus={false}\n        disableOutsidePointerEvents={false}\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            // Always prevent auto focus because we either focus manually or want user agent focus\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n          hasPointerDownOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented) {\n            hasInteractedOutsideRef.current = true;\n            if (event.detail.originalEvent.type === 'pointerdown') {\n              hasPointerDownOutsideRef.current = true;\n            }\n          }\n\n          // Prevent dismissing when clicking the trigger.\n          // As the trigger is already setup to close, without doing so would\n          // cause it to close and immediately open.\n          const target = event.target as HTMLElement;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n\n          // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n          // we will get the pointer down outside event on the trigger, but then a subsequent\n          // focus outside event on the container, we ignore any focus outside event when we've\n          // already had a pointer down outside event.\n          if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) {\n            event.preventDefault();\n          }\n        }}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentImplElement = React.ElementRef<typeof DismissableLayer>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype FocusScopeProps = Radix.ComponentPropsWithoutRef<typeof FocusScope>;\ninterface DialogContentImplProps extends Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * When `true`, focus cannot escape the `Content` via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst DialogContentImpl = React.forwardRef<DialogContentImplElement, DialogContentImplProps>(\n  (props: ScopedProps<DialogContentImplProps>, forwardedRef) => {\n    const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, __scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n\n    // Make sure the whole tree has focus guards as our `Dialog` will be\n    // the last element in the DOM (beacuse of the `Portal`)\n    useFocusGuards();\n\n    return (\n      <>\n        <FocusScope\n          asChild\n          loop\n          trapped={trapFocus}\n          onMountAutoFocus={onOpenAutoFocus}\n          onUnmountAutoFocus={onCloseAutoFocus}\n        >\n          <DismissableLayer\n            role=\"dialog\"\n            id={context.contentId}\n            aria-describedby={context.descriptionId}\n            aria-labelledby={context.titleId}\n            data-state={getState(context.open)}\n            {...contentProps}\n            ref={composedRefs}\n            onDismiss={() => context.onOpenChange(false)}\n          />\n        </FocusScope>\n        {process.env.NODE_ENV !== 'production' && (\n          <>\n            <TitleWarning titleId={context.titleId} />\n            <DescriptionWarning contentRef={contentRef} descriptionId={context.descriptionId} />\n          </>\n        )}\n      </>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst TITLE_NAME = 'DialogTitle';\n\ntype DialogTitleElement = React.ElementRef<typeof Primitive.h2>;\ntype PrimitiveHeading2Props = Radix.ComponentPropsWithoutRef<typeof Primitive.h2>;\ninterface DialogTitleProps extends PrimitiveHeading2Props {}\n\nconst DialogTitle = React.forwardRef<DialogTitleElement, DialogTitleProps>(\n  (props: ScopedProps<DialogTitleProps>, forwardedRef) => {\n    const { __scopeDialog, ...titleProps } = props;\n    const context = useDialogContext(TITLE_NAME, __scopeDialog);\n    return <Primitive.h2 id={context.titleId} {...titleProps} ref={forwardedRef} />;\n  }\n);\n\nDialogTitle.displayName = TITLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DESCRIPTION_NAME = 'DialogDescription';\n\ntype DialogDescriptionElement = React.ElementRef<typeof Primitive.p>;\ntype PrimitiveParagraphProps = Radix.ComponentPropsWithoutRef<typeof Primitive.p>;\ninterface DialogDescriptionProps extends PrimitiveParagraphProps {}\n\nconst DialogDescription = React.forwardRef<DialogDescriptionElement, DialogDescriptionProps>(\n  (props: ScopedProps<DialogDescriptionProps>, forwardedRef) => {\n    const { __scopeDialog, ...descriptionProps } = props;\n    const context = useDialogContext(DESCRIPTION_NAME, __scopeDialog);\n    return <Primitive.p id={context.descriptionId} {...descriptionProps} ref={forwardedRef} />;\n  }\n);\n\nDialogDescription.displayName = DESCRIPTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'DialogClose';\n\ntype DialogCloseElement = React.ElementRef<typeof Primitive.button>;\ninterface DialogCloseProps extends PrimitiveButtonProps {}\n\nconst DialogClose = React.forwardRef<DialogCloseElement, DialogCloseProps>(\n  (props: ScopedProps<DialogCloseProps>, forwardedRef) => {\n    const { __scopeDialog, ...closeProps } = props;\n    const context = useDialogContext(CLOSE_NAME, __scopeDialog);\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, () => context.onOpenChange(false))}\n      />\n    );\n  }\n);\n\nDialogClose.displayName = CLOSE_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst TITLE_WARNING_NAME = 'DialogTitleWarning';\n\nconst [WarningProvider, useWarningContext] = createContext(TITLE_WARNING_NAME, {\n  contentName: CONTENT_NAME,\n  titleName: TITLE_NAME,\n  docsSlug: 'dialog',\n});\n\ntype TitleWarningProps = { titleId?: string };\n\nconst TitleWarning: React.FC<TitleWarningProps> = ({ titleId }) => {\n  const titleWarningContext = useWarningContext(TITLE_WARNING_NAME);\n\n  const MESSAGE = `\\`${titleWarningContext.contentName}\\` requires a \\`${titleWarningContext.titleName}\\` for the component to be accessible for screen reader users.\n\nIf you want to hide the \\`${titleWarningContext.titleName}\\`, you can wrap it with our VisuallyHidden component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;\n\n  React.useEffect(() => {\n    if (titleId) {\n      const hasTitle = document.getElementById(titleId);\n      if (!hasTitle) throw new Error(MESSAGE);\n    }\n  }, [MESSAGE, titleId]);\n\n  return null;\n};\n\nconst DESCRIPTION_WARNING_NAME = 'DialogDescriptionWarning';\n\ntype DescriptionWarningProps = {\n  contentRef: React.RefObject<DialogContentElement>;\n  descriptionId?: string;\n};\n\nconst DescriptionWarning: React.FC<DescriptionWarningProps> = ({ contentRef, descriptionId }) => {\n  const descriptionWarningContext = useWarningContext(DESCRIPTION_WARNING_NAME);\n  const MESSAGE = `Warning: Missing \\`Description\\` or \\`aria-describedby={undefined}\\` for {${descriptionWarningContext.contentName}}.`;\n\n  React.useEffect(() => {\n    const describedById = contentRef.current?.getAttribute('aria-describedby');\n    // if we have an id and the user hasn't set aria-describedby={undefined}\n    if (descriptionId && describedById) {\n      const hasDescription = document.getElementById(descriptionId);\n      if (!hasDescription) console.warn(MESSAGE);\n    }\n  }, [MESSAGE, contentRef, descriptionId]);\n\n  return null;\n};\n\nconst Root = Dialog;\nconst Trigger = DialogTrigger;\nconst Portal = DialogPortal;\nconst Overlay = DialogOverlay;\nconst Content = DialogContent;\nconst Title = DialogTitle;\nconst Description = DialogDescription;\nconst Close = DialogClose;\n\nexport {\n  createDialogScope,\n  //\n  Dialog,\n  DialogTrigger,\n  DialogPortal,\n  DialogOverlay,\n  DialogContent,\n  DialogTitle,\n  DialogDescription,\n  DialogClose,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Title,\n  Description,\n  Close,\n  //\n  WarningProvider,\n};\nexport type {\n  DialogProps,\n  DialogTriggerProps,\n  DialogPortalProps,\n  DialogOverlayProps,\n  DialogContentProps,\n  DialogTitleProps,\n  DialogDescriptionProps,\n  DialogCloseProps,\n};\n"],"names":["DIALOG_NAME","createDialogContext","createDialogScope","createContextScope","DialogProvider","useDialogContext","Dialog","props","__scopeDialog","children","open","openProp","defaultOpen","onOpenChange","modal","triggerRef","React","contentRef","setOpen","useControllableState","prop","defaultProp","onChange","useId","prevOpen","TRIGGER_NAME","DialogTrigger","forwardedRef","triggerProps","context","composedTriggerRef","useComposedRefs","contentId","getState","composeEventHandlers","onClick","onOpenToggle","PORTAL_NAME","PortalProvider","usePortalContext","forceMount","undefined","DialogPortal","container","map","child","OVERLAY_NAME","DialogOverlay","portalContext","overlayProps","DialogOverlayImpl","Slot","pointerEvents","style","CONTENT_NAME","DialogContent","contentProps","DialogContentModal","composedRefs","content","current","hideOthers","onCloseAutoFocus","event","preventDefault","focus","onPointerDownOutside","originalEvent","detail","ctrlLeftClick","button","ctrlKey","isRightClick","onFocusOutside","DialogContentNonModal","hasInteractedOutsideRef","hasPointerDownOutsideRef","defaultPrevented","onInteractOutside","type","target","targetIsTrigger","contains","DialogContentImpl","trapFocus","onOpenAutoFocus","useFocusGuards","descriptionId","titleId","process","TITLE_NAME","DialogTitle","titleProps","DESCRIPTION_NAME","DialogDescription","descriptionProps","CLOSE_NAME","DialogClose","closeProps","TITLE_WARNING_NAME","WarningProvider","useWarningContext","createContext","contentName","titleName","docsSlug","TitleWarning","titleWarningContext","MESSAGE","hasTitle","document","getElementById","Error","DESCRIPTION_WARNING_NAME","DescriptionWarning","descriptionWarningContext","describedById","getAttribute","hasDescription","console","warn","Root","Trigger","Portal","Overlay","Content","Title","Description","Close"],"mappings":"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"}},
    {"offset": {"line": 745, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 750, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@radix-ui/react-label/dist/packages/react/label/src/index.ts","/turbopack/[project]/node_modules/@radix-ui/react-label/dist/packages/react/label/src/Label.tsx"],"sourcesContent":["export {\n  Label,\n  //\n  Root,\n} from './Label';\nexport type { LabelProps } from './Label';\n","import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Label\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Label';\n\ntype LabelElement = React.ElementRef<typeof Primitive.label>;\ntype PrimitiveLabelProps = Radix.ComponentPropsWithoutRef<typeof Primitive.label>;\ninterface LabelProps extends PrimitiveLabelProps {}\n\nconst Label = React.forwardRef<LabelElement, LabelProps>((props, forwardedRef) => {\n  return (\n    <Primitive.label\n      {...props}\n      ref={forwardedRef}\n      onMouseDown={(event) => {\n        props.onMouseDown?.(event);\n        // prevent text selection when double clicking label\n        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n      }}\n    />\n  );\n});\n\nLabel.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Label;\n\nexport {\n  Label,\n  //\n  Root,\n};\nexport type { LabelProps };\n"],"names":["NAME","Label","React","props","forwardedRef","event","onMouseDown","defaultPrevented","detail","preventDefault","Root"],"mappings":";;;;;;;;;;;ACKA;;qGAIA,MAAMA,6BAAO;AAMb,MAAMC,4CAAK,WAAA,GAAGC,CAAAA,GAAAA,+MAAAA,CAAAA,aAAA,AAAAA,EAA2C,CAACC,OAAOC;IAC/D,OAAA,WAAA,GACE,CAAA,GAAA,+MAAA,CAAA,gBAAA,EAAC,qKAAA,CAAA,YAAD,CAAW,KAAX,EAAA,CAAA,GAAA,+JAAA,CAAA,UAAA,EAAA,CAAA,GACMD,OAFR;QAGI,KAAKC;QACL,aAAcC,CAAAA;YAAU,IAAA;YACtB,CAAA,qBAAAF,MAAMG,WAAN,MAAA,QAAA,uBAAA,KAAA,KAAA,mBAAA,IAAA,CAAAH,OAAoBE,QACpB,oDADA;YAEA,IAAI,CAACA,MAAME,gBAAP,IAA2BF,MAAMG,MAAN,GAAe,GAAGH,MAAMI,cAAN;;;;AAMzD,WAAA,GAAA,OAAA,MAAA,CAAA,2CAAA;IAAA,aAAA;;AAEA,kGAAA,GAEA,MAAMC,4CAAOT"}},
    {"offset": {"line": 780, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 785, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@radix-ui/react-direction/dist/packages/react/direction/src/index.ts","/turbopack/[project]/node_modules/@radix-ui/react-direction/dist/packages/react/direction/src/Direction.tsx"],"sourcesContent":["export {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n} from './Direction';\n","import * as React from 'react';\n\ntype Direction = 'ltr' | 'rtl';\nconst DirectionContext = React.createContext<Direction | undefined>(undefined);\n\n/* -------------------------------------------------------------------------------------------------\n * Direction\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DirectionProviderProps {\n  children?: React.ReactNode;\n  dir: Direction;\n}\nconst DirectionProvider: React.FC<DirectionProviderProps> = (props) => {\n  const { dir, children } = props;\n  return <DirectionContext.Provider value={dir}>{children}</DirectionContext.Provider>;\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useDirection(localDir?: Direction) {\n  const globalDir = React.useContext(DirectionContext);\n  return localDir || globalDir || 'ltr';\n}\n\nconst Provider = DirectionProvider;\n\nexport {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n};\n"],"names":["DirectionContext","React","undefined","DirectionProvider","props","dir","children","useDirection","localDir","globalDir","Provider"],"mappings":";;;;;;;;ACGA,MAAMA,yCAAgB,WAAA,GAAGC,CAAAA,GAAAA,+MAAAA,CAAAA,gBAAA,AAAAA,EAA2CC;AAEpE;;qGAQA,MAAMC,4CAAuDC,CAAAA;IAC3D,MAAM,EAdR,KAcUC,GAAF,EAdR,UAceC,QAAAA,EAAP,GAAoBF;IAC1B,OAAA,WAAA,GAAO,CAAA,GAAA,+MAAA,CAAA,gBAAA,EAAC,uCAAiB,QAAlB,EAAP;QAAkC,OAAOC;OAAMC;;AAGjD,kGAAA,GAEA,SAASC,0CAAaC,QAAtB;IACE,MAAMC,YAAYR,CAAAA,GAAAA,+MAAAA,CAAAA,aAAA,AAAAA,EAAiBD;IACnC,OAAOQ,YAAYC,aAAa;;AAGlC,MAAMC,4CAAWP"}},
    {"offset": {"line": 809, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 814, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@radix-ui/react-roving-focus/dist/packages/react/roving-focus/src/index.ts","/turbopack/[project]/node_modules/@radix-ui/react-roving-focus/dist/packages/react/roving-focus/src/RovingFocusGroup.tsx"],"sourcesContent":["export {\n  createRovingFocusGroupScope,\n  //\n  RovingFocusGroup,\n  RovingFocusGroupItem,\n  //\n  Root,\n  Item,\n} from './RovingFocusGroup';\nexport type { RovingFocusGroupProps, RovingFocusItemProps } from './RovingFocusGroup';\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useDirection } from '@radix-ui/react-direction';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\nconst ENTRY_FOCUS = 'rovingFocusGroup.onEntryFocus';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'RovingFocusGroup';\n\ntype ItemData = { id: string; focusable: boolean; active: boolean };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  HTMLSpanElement,\n  ItemData\n>(GROUP_NAME);\n\ntype ScopedProps<P> = P & { __scopeRovingFocusGroup?: Scope };\nconst [createRovingFocusGroupContext, createRovingFocusGroupScope] = createContextScope(\n  GROUP_NAME,\n  [createCollectionScope]\n);\n\ntype Orientation = React.AriaAttributes['aria-orientation'];\ntype Direction = 'ltr' | 'rtl';\n\ninterface RovingFocusGroupOptions {\n  /**\n   * The orientation of the group.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   */\n  orientation?: Orientation;\n  /**\n   * The direction of navigation between items.\n   */\n  dir?: Direction;\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: boolean;\n}\n\ntype RovingContextValue = RovingFocusGroupOptions & {\n  currentTabStopId: string | null;\n  onItemFocus(tabStopId: string): void;\n  onItemShiftTab(): void;\n  onFocusableItemAdd(): void;\n  onFocusableItemRemove(): void;\n};\n\nconst [RovingFocusProvider, useRovingFocusContext] =\n  createRovingFocusGroupContext<RovingContextValue>(GROUP_NAME);\n\ntype RovingFocusGroupElement = RovingFocusGroupImplElement;\ninterface RovingFocusGroupProps extends RovingFocusGroupImplProps {}\n\nconst RovingFocusGroup = React.forwardRef<RovingFocusGroupElement, RovingFocusGroupProps>(\n  (props: ScopedProps<RovingFocusGroupProps>, forwardedRef) => {\n    return (\n      <Collection.Provider scope={props.__scopeRovingFocusGroup}>\n        <Collection.Slot scope={props.__scopeRovingFocusGroup}>\n          <RovingFocusGroupImpl {...props} ref={forwardedRef} />\n        </Collection.Slot>\n      </Collection.Provider>\n    );\n  }\n);\n\nRovingFocusGroup.displayName = GROUP_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype RovingFocusGroupImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface RovingFocusGroupImplProps\n  extends Omit<PrimitiveDivProps, 'dir'>,\n    RovingFocusGroupOptions {\n  currentTabStopId?: string | null;\n  defaultCurrentTabStopId?: string;\n  onCurrentTabStopIdChange?: (tabStopId: string | null) => void;\n  onEntryFocus?: (event: Event) => void;\n}\n\nconst RovingFocusGroupImpl = React.forwardRef<\n  RovingFocusGroupImplElement,\n  RovingFocusGroupImplProps\n>((props: ScopedProps<RovingFocusGroupImplProps>, forwardedRef) => {\n  const {\n    __scopeRovingFocusGroup,\n    orientation,\n    loop = false,\n    dir,\n    currentTabStopId: currentTabStopIdProp,\n    defaultCurrentTabStopId,\n    onCurrentTabStopIdChange,\n    onEntryFocus,\n    ...groupProps\n  } = props;\n  const ref = React.useRef<RovingFocusGroupImplElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const direction = useDirection(dir);\n  const [currentTabStopId = null, setCurrentTabStopId] = useControllableState({\n    prop: currentTabStopIdProp,\n    defaultProp: defaultCurrentTabStopId,\n    onChange: onCurrentTabStopIdChange,\n  });\n  const [isTabbingBackOut, setIsTabbingBackOut] = React.useState(false);\n  const handleEntryFocus = useCallbackRef(onEntryFocus);\n  const getItems = useCollection(__scopeRovingFocusGroup);\n  const isClickFocusRef = React.useRef(false);\n  const [focusableItemsCount, setFocusableItemsCount] = React.useState(0);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      node.addEventListener(ENTRY_FOCUS, handleEntryFocus);\n      return () => node.removeEventListener(ENTRY_FOCUS, handleEntryFocus);\n    }\n  }, [handleEntryFocus]);\n\n  return (\n    <RovingFocusProvider\n      scope={__scopeRovingFocusGroup}\n      orientation={orientation}\n      dir={direction}\n      loop={loop}\n      currentTabStopId={currentTabStopId}\n      onItemFocus={React.useCallback(\n        (tabStopId) => setCurrentTabStopId(tabStopId),\n        [setCurrentTabStopId]\n      )}\n      onItemShiftTab={React.useCallback(() => setIsTabbingBackOut(true), [])}\n      onFocusableItemAdd={React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount + 1),\n        []\n      )}\n      onFocusableItemRemove={React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount - 1),\n        []\n      )}\n    >\n      <Primitive.div\n        tabIndex={isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0}\n        data-orientation={orientation}\n        {...groupProps}\n        ref={composedRefs}\n        style={{ outline: 'none', ...props.style }}\n        onMouseDown={composeEventHandlers(props.onMouseDown, () => {\n          isClickFocusRef.current = true;\n        })}\n        onFocus={composeEventHandlers(props.onFocus, (event) => {\n          // We normally wouldn't need this check, because we already check\n          // that the focus is on the current target and not bubbling to it.\n          // We do this because Safari doesn't focus buttons when clicked, and\n          // instead, the wrapper will get focused and not through a bubbling event.\n          const isKeyboardFocus = !isClickFocusRef.current;\n\n          if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {\n            const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS);\n            event.currentTarget.dispatchEvent(entryFocusEvent);\n\n            if (!entryFocusEvent.defaultPrevented) {\n              const items = getItems().filter((item) => item.focusable);\n              const activeItem = items.find((item) => item.active);\n              const currentItem = items.find((item) => item.id === currentTabStopId);\n              const candidateItems = [activeItem, currentItem, ...items].filter(\n                Boolean\n              ) as typeof items;\n              const candidateNodes = candidateItems.map((item) => item.ref.current!);\n              focusFirst(candidateNodes);\n            }\n          }\n\n          isClickFocusRef.current = false;\n        })}\n        onBlur={composeEventHandlers(props.onBlur, () => setIsTabbingBackOut(false))}\n      />\n    </RovingFocusProvider>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroupItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'RovingFocusGroupItem';\n\ntype RovingFocusItemElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface RovingFocusItemProps extends PrimitiveSpanProps {\n  tabStopId?: string;\n  focusable?: boolean;\n  active?: boolean;\n}\n\nconst RovingFocusGroupItem = React.forwardRef<RovingFocusItemElement, RovingFocusItemProps>(\n  (props: ScopedProps<RovingFocusItemProps>, forwardedRef) => {\n    const {\n      __scopeRovingFocusGroup,\n      focusable = true,\n      active = false,\n      tabStopId,\n      ...itemProps\n    } = props;\n    const autoId = useId();\n    const id = tabStopId || autoId;\n    const context = useRovingFocusContext(ITEM_NAME, __scopeRovingFocusGroup);\n    const isCurrentTabStop = context.currentTabStopId === id;\n    const getItems = useCollection(__scopeRovingFocusGroup);\n\n    const { onFocusableItemAdd, onFocusableItemRemove } = context;\n\n    React.useEffect(() => {\n      if (focusable) {\n        onFocusableItemAdd();\n        return () => onFocusableItemRemove();\n      }\n    }, [focusable, onFocusableItemAdd, onFocusableItemRemove]);\n\n    return (\n      <Collection.ItemSlot\n        scope={__scopeRovingFocusGroup}\n        id={id}\n        focusable={focusable}\n        active={active}\n      >\n        <Primitive.span\n          tabIndex={isCurrentTabStop ? 0 : -1}\n          data-orientation={context.orientation}\n          {...itemProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // We prevent focusing non-focusable items on `mousedown`.\n            // Even though the item has tabIndex={-1}, that only means take it out of the tab order.\n            if (!focusable) event.preventDefault();\n            // Safari doesn't focus a button when clicked so we run our logic on mousedown also\n            else context.onItemFocus(id);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => context.onItemFocus(id))}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if (event.key === 'Tab' && event.shiftKey) {\n              context.onItemShiftTab();\n              return;\n            }\n\n            if (event.target !== event.currentTarget) return;\n\n            const focusIntent = getFocusIntent(event, context.orientation, context.dir);\n\n            if (focusIntent !== undefined) {\n              event.preventDefault();\n              const items = getItems().filter((item) => item.focusable);\n              let candidateNodes = items.map((item) => item.ref.current!);\n\n              if (focusIntent === 'last') candidateNodes.reverse();\n              else if (focusIntent === 'prev' || focusIntent === 'next') {\n                if (focusIntent === 'prev') candidateNodes.reverse();\n                const currentIndex = candidateNodes.indexOf(event.currentTarget);\n                candidateNodes = context.loop\n                  ? wrapArray(candidateNodes, currentIndex + 1)\n                  : candidateNodes.slice(currentIndex + 1);\n              }\n\n              /**\n               * Imperative focus during keydown is risky so we prevent React's batching updates\n               * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n               */\n              setTimeout(() => focusFirst(candidateNodes));\n            }\n          })}\n        />\n      </Collection.ItemSlot>\n    );\n  }\n);\n\nRovingFocusGroupItem.displayName = ITEM_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\n// prettier-ignore\nconst MAP_KEY_TO_FOCUS_INTENT: Record<string, FocusIntent> = {\n  ArrowLeft: 'prev', ArrowUp: 'prev',\n  ArrowRight: 'next', ArrowDown: 'next',\n  PageUp: 'first', Home: 'first',\n  PageDown: 'last', End: 'last',\n};\n\nfunction getDirectionAwareKey(key: string, dir?: Direction) {\n  if (dir !== 'rtl') return key;\n  return key === 'ArrowLeft' ? 'ArrowRight' : key === 'ArrowRight' ? 'ArrowLeft' : key;\n}\n\ntype FocusIntent = 'first' | 'last' | 'prev' | 'next';\n\nfunction getFocusIntent(event: React.KeyboardEvent, orientation?: Orientation, dir?: Direction) {\n  const key = getDirectionAwareKey(event.key, dir);\n  if (orientation === 'vertical' && ['ArrowLeft', 'ArrowRight'].includes(key)) return undefined;\n  if (orientation === 'horizontal' && ['ArrowUp', 'ArrowDown'].includes(key)) return undefined;\n  return MAP_KEY_TO_FOCUS_INTENT[key];\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus();\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\nconst Root = RovingFocusGroup;\nconst Item = RovingFocusGroupItem;\n\nexport {\n  createRovingFocusGroupScope,\n  //\n  RovingFocusGroup,\n  RovingFocusGroupItem,\n  //\n  Root,\n  Item,\n};\nexport type { RovingFocusGroupProps, RovingFocusItemProps };\n"],"names":["ENTRY_FOCUS","EVENT_OPTIONS","bubbles","cancelable","GROUP_NAME","Collection","useCollection","createCollectionScope","createCollection","createRovingFocusGroupContext","createRovingFocusGroupScope","createContextScope","RovingFocusProvider","useRovingFocusContext","RovingFocusGroup","React","props","forwardedRef","__scopeRovingFocusGroup","RovingFocusGroupImpl","orientation","loop","dir","currentTabStopId","currentTabStopIdProp","defaultCurrentTabStopId","onCurrentTabStopIdChange","onEntryFocus","groupProps","ref","composedRefs","useComposedRefs","direction","useDirection","setCurrentTabStopId","useControllableState","prop","defaultProp","onChange","isTabbingBackOut","setIsTabbingBackOut","handleEntryFocus","useCallbackRef","getItems","isClickFocusRef","focusableItemsCount","setFocusableItemsCount","node","current","addEventListener","removeEventListener","tabStopId","prevCount","outline","style","composeEventHandlers","onMouseDown","onFocus","event","isKeyboardFocus","target","currentTarget","entryFocusEvent","CustomEvent","dispatchEvent","defaultPrevented","items","filter","item","focusable","activeItem","find","active","currentItem","id","candidateItems","Boolean","candidateNodes","map","focusFirst","onBlur","ITEM_NAME","RovingFocusGroupItem","itemProps","autoId","useId","context","isCurrentTabStop","onFocusableItemAdd","onFocusableItemRemove","preventDefault","onItemFocus","onKeyDown","key","shiftKey","onItemShiftTab","focusIntent","getFocusIntent","undefined","reverse","currentIndex","indexOf","wrapArray","slice","setTimeout","MAP_KEY_TO_FOCUS_INTENT","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","PageUp","Home","PageDown","End","getDirectionAwareKey","includes","candidates","PREVIOUSLY_FOCUSED_ELEMENT","document","activeElement","candidate","focus","array","startIndex","_","index","length","Root","Item"],"mappings":"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"}},
    {"offset": {"line": 1056, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1061, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@radix-ui/react-radio-group/dist/packages/react/radio-group/src/index.ts","/turbopack/[project]/node_modules/@radix-ui/react-radio-group/dist/packages/react/radio-group/src/RadioGroup.tsx","/turbopack/[project]/node_modules/@radix-ui/react-radio-group/dist/packages/react/radio-group/src/Radio.tsx"],"sourcesContent":["export {\n  createRadioGroupScope,\n  //\n  RadioGroup,\n  RadioGroupItem,\n  RadioGroupIndicator,\n  //\n  Root,\n  Item,\n  Indicator,\n} from './RadioGroup';\nexport type { RadioGroupProps, RadioGroupItemProps, RadioGroupIndicatorProps } from './RadioGroup';\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { Radio, RadioIndicator, createRadioScope } from './Radio';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\nconst ARROW_KEYS = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\n\n/* -------------------------------------------------------------------------------------------------\n * RadioGroup\n * -----------------------------------------------------------------------------------------------*/\nconst RADIO_GROUP_NAME = 'RadioGroup';\n\ntype ScopedProps<P> = P & { __scopeRadioGroup?: Scope };\nconst [createRadioGroupContext, createRadioGroupScope] = createContextScope(RADIO_GROUP_NAME, [\n  createRovingFocusGroupScope,\n  createRadioScope,\n]);\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\nconst useRadioScope = createRadioScope();\n\ntype RadioGroupContextValue = {\n  name?: string;\n  required: boolean;\n  disabled: boolean;\n  value?: string;\n  onValueChange(value: string): void;\n};\n\nconst [RadioGroupProvider, useRadioGroupContext] =\n  createRadioGroupContext<RadioGroupContextValue>(RADIO_GROUP_NAME);\n\ntype RadioGroupElement = React.ElementRef<typeof Primitive.div>;\ntype RovingFocusGroupProps = Radix.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface RadioGroupProps extends PrimitiveDivProps {\n  name?: RadioGroupContextValue['name'];\n  required?: Radix.ComponentPropsWithoutRef<typeof Radio>['required'];\n  disabled?: Radix.ComponentPropsWithoutRef<typeof Radio>['disabled'];\n  dir?: RovingFocusGroupProps['dir'];\n  orientation?: RovingFocusGroupProps['orientation'];\n  loop?: RovingFocusGroupProps['loop'];\n  defaultValue?: string;\n  value?: RadioGroupContextValue['value'];\n  onValueChange?: RadioGroupContextValue['onValueChange'];\n}\n\nconst RadioGroup = React.forwardRef<RadioGroupElement, RadioGroupProps>(\n  (props: ScopedProps<RadioGroupProps>, forwardedRef) => {\n    const {\n      __scopeRadioGroup,\n      name,\n      defaultValue,\n      value: valueProp,\n      required = false,\n      disabled = false,\n      orientation,\n      dir,\n      loop = true,\n      onValueChange,\n      ...groupProps\n    } = props;\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeRadioGroup);\n    const direction = useDirection(dir);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      defaultProp: defaultValue,\n      onChange: onValueChange,\n    });\n\n    return (\n      <RadioGroupProvider\n        scope={__scopeRadioGroup}\n        name={name}\n        required={required}\n        disabled={disabled}\n        value={value}\n        onValueChange={setValue}\n      >\n        <RovingFocusGroup.Root\n          asChild\n          {...rovingFocusGroupScope}\n          orientation={orientation}\n          dir={direction}\n          loop={loop}\n        >\n          <Primitive.div\n            role=\"radiogroup\"\n            aria-required={required}\n            aria-orientation={orientation}\n            data-disabled={disabled ? '' : undefined}\n            dir={direction}\n            {...groupProps}\n            ref={forwardedRef}\n          />\n        </RovingFocusGroup.Root>\n      </RadioGroupProvider>\n    );\n  }\n);\n\nRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * RadioGroupItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'RadioGroupItem';\n\ntype RadioGroupItemElement = React.ElementRef<typeof Radio>;\ntype RadioProps = Radix.ComponentPropsWithoutRef<typeof Radio>;\ninterface RadioGroupItemProps extends Omit<RadioProps, 'onCheck' | 'name'> {\n  value: string;\n}\n\nconst RadioGroupItem = React.forwardRef<RadioGroupItemElement, RadioGroupItemProps>(\n  (props: ScopedProps<RadioGroupItemProps>, forwardedRef) => {\n    const { __scopeRadioGroup, disabled, ...itemProps } = props;\n    const context = useRadioGroupContext(ITEM_NAME, __scopeRadioGroup);\n    const isDisabled = context.disabled || disabled;\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeRadioGroup);\n    const radioScope = useRadioScope(__scopeRadioGroup);\n    const ref = React.useRef<React.ElementRef<typeof Radio>>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const checked = context.value === itemProps.value;\n    const isArrowKeyPressedRef = React.useRef(false);\n\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (ARROW_KEYS.includes(event.key)) {\n          isArrowKeyPressedRef.current = true;\n        }\n      };\n      const handleKeyUp = () => (isArrowKeyPressedRef.current = false);\n      document.addEventListener('keydown', handleKeyDown);\n      document.addEventListener('keyup', handleKeyUp);\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n        document.removeEventListener('keyup', handleKeyUp);\n      };\n    }, []);\n\n    return (\n      <RovingFocusGroup.Item\n        asChild\n        {...rovingFocusGroupScope}\n        focusable={!isDisabled}\n        active={checked}\n      >\n        <Radio\n          disabled={isDisabled}\n          required={context.required}\n          checked={checked}\n          {...radioScope}\n          {...itemProps}\n          name={context.name}\n          ref={composedRefs}\n          onCheck={() => context.onValueChange(itemProps.value)}\n          onKeyDown={composeEventHandlers((event) => {\n            // According to WAI ARIA, radio groups don't activate items on enter keypress\n            if (event.key === 'Enter') event.preventDefault();\n          })}\n          onFocus={composeEventHandlers(itemProps.onFocus, () => {\n            /**\n             * Our `RovingFocusGroup` will focus the radio when navigating with arrow keys\n             * and we need to \"check\" it in that case. We click it to \"check\" it (instead\n             * of updating `context.value`) so that the radio change event fires.\n             */\n            if (isArrowKeyPressedRef.current) ref.current?.click();\n          })}\n        />\n      </RovingFocusGroup.Item>\n    );\n  }\n);\n\nRadioGroupItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * RadioGroupIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'RadioGroupIndicator';\n\ntype RadioGroupIndicatorElement = React.ElementRef<typeof RadioIndicator>;\ntype RadioIndicatorProps = Radix.ComponentPropsWithoutRef<typeof RadioIndicator>;\ninterface RadioGroupIndicatorProps extends RadioIndicatorProps {}\n\nconst RadioGroupIndicator = React.forwardRef<RadioGroupIndicatorElement, RadioGroupIndicatorProps>(\n  (props: ScopedProps<RadioGroupIndicatorProps>, forwardedRef) => {\n    const { __scopeRadioGroup, ...indicatorProps } = props;\n    const radioScope = useRadioScope(__scopeRadioGroup);\n    return <RadioIndicator {...radioScope} {...indicatorProps} ref={forwardedRef} />;\n  }\n);\n\nRadioGroupIndicator.displayName = INDICATOR_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nconst Root = RadioGroup;\nconst Item = RadioGroupItem;\nconst Indicator = RadioGroupIndicator;\n\nexport {\n  createRadioGroupScope,\n  //\n  RadioGroup,\n  RadioGroupItem,\n  RadioGroupIndicator,\n  //\n  Root,\n  Item,\n  Indicator,\n};\nexport type { RadioGroupProps, RadioGroupItemProps, RadioGroupIndicatorProps };\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Radio\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_NAME = 'Radio';\n\ntype ScopedProps<P> = P & { __scopeRadio?: Scope };\nconst [createRadioContext, createRadioScope] = createContextScope(RADIO_NAME);\n\ntype RadioContextValue = { checked: boolean; disabled?: boolean };\nconst [RadioProvider, useRadioContext] = createRadioContext<RadioContextValue>(RADIO_NAME);\n\ntype RadioElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface RadioProps extends PrimitiveButtonProps {\n  checked?: boolean;\n  required?: boolean;\n  onCheck?(): void;\n}\n\nconst Radio = React.forwardRef<RadioElement, RadioProps>(\n  (props: ScopedProps<RadioProps>, forwardedRef) => {\n    const {\n      __scopeRadio,\n      name,\n      checked = false,\n      required,\n      disabled,\n      value = 'on',\n      onCheck,\n      ...radioProps\n    } = props;\n    const [button, setButton] = React.useState<HTMLButtonElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    // We set this to true by default so that events bubble to forms without JS (SSR)\n    const isFormControl = button ? Boolean(button.closest('form')) : true;\n\n    return (\n      <RadioProvider scope={__scopeRadio} checked={checked} disabled={disabled}>\n        <Primitive.button\n          type=\"button\"\n          role=\"radio\"\n          aria-checked={checked}\n          data-state={getState(checked)}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          value={value}\n          {...radioProps}\n          ref={composedRefs}\n          onClick={composeEventHandlers(props.onClick, (event) => {\n            // radios cannot be unchecked so we only communicate a checked state\n            if (!checked) onCheck?.();\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              // if radio is in a form, stop propagation from the button so that we only propagate\n              // one click event (from the input). We propagate changes from an input so that native\n              // form validation works and form events reflect radio updates.\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })}\n        />\n        {isFormControl && (\n          <BubbleInput\n            control={button}\n            bubbles={!hasConsumerStoppedPropagationRef.current}\n            name={name}\n            value={value}\n            checked={checked}\n            required={required}\n            disabled={disabled}\n            // We transform because the input is absolutely positioned but we have\n            // rendered it **after** the button. This pulls it back to sit on top\n            // of the button.\n            style={{ transform: 'translateX(-100%)' }}\n          />\n        )}\n      </RadioProvider>\n    );\n  }\n);\n\nRadio.displayName = RADIO_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * RadioIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'RadioIndicator';\n\ntype RadioIndicatorElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\nexport interface RadioIndicatorProps extends PrimitiveSpanProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst RadioIndicator = React.forwardRef<RadioIndicatorElement, RadioIndicatorProps>(\n  (props: ScopedProps<RadioIndicatorProps>, forwardedRef) => {\n    const { __scopeRadio, forceMount, ...indicatorProps } = props;\n    const context = useRadioContext(INDICATOR_NAME, __scopeRadio);\n    return (\n      <Presence present={forceMount || context.checked}>\n        <Primitive.span\n          data-state={getState(context.checked)}\n          data-disabled={context.disabled ? '' : undefined}\n          {...indicatorProps}\n          ref={forwardedRef}\n        />\n      </Presence>\n    );\n  }\n);\n\nRadioIndicator.displayName = INDICATOR_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype InputProps = Radix.ComponentPropsWithoutRef<'input'>;\ninterface BubbleInputProps extends Omit<InputProps, 'checked'> {\n  checked: boolean;\n  control: HTMLElement | null;\n  bubbles: boolean;\n}\n\nconst BubbleInput = (props: BubbleInputProps) => {\n  const { control, checked, bubbles = true, ...inputProps } = props;\n  const ref = React.useRef<HTMLInputElement>(null);\n  const prevChecked = usePrevious(checked);\n  const controlSize = useSize(control);\n\n  // Bubble checked change to parents (e.g form change event)\n  React.useEffect(() => {\n    const input = ref.current!;\n    const inputProto = window.HTMLInputElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(inputProto, 'checked') as PropertyDescriptor;\n    const setChecked = descriptor.set;\n    if (prevChecked !== checked && setChecked) {\n      const event = new Event('click', { bubbles });\n      setChecked.call(input, checked);\n      input.dispatchEvent(event);\n    }\n  }, [prevChecked, checked, bubbles]);\n\n  return (\n    <input\n      type=\"radio\"\n      aria-hidden\n      defaultChecked={checked}\n      {...inputProps}\n      tabIndex={-1}\n      ref={ref}\n      style={{\n        ...props.style,\n        ...controlSize,\n        position: 'absolute',\n        pointerEvents: 'none',\n        opacity: 0,\n        margin: 0,\n      }}\n    />\n  );\n};\n\nfunction getState(checked: boolean) {\n  return checked ? 'checked' : 'unchecked';\n}\n\nexport {\n  createRadioScope,\n  //\n  Radio,\n  RadioIndicator,\n};\nexport type { RadioProps };\n"],"names":["RADIO_NAME","createRadioContext","createRadioScope","createContextScope","RadioProvider","useRadioContext","Radio","React","props","forwardedRef","__scopeRadio","name","checked","required","disabled","value","onCheck","radioProps","button","setButton","composedRefs","useComposedRefs","node","hasConsumerStoppedPropagationRef","isFormControl","Boolean","closest","getState","undefined","composeEventHandlers","onClick","event","current","isPropagationStopped","stopPropagation","transform","INDICATOR_NAME","RadioIndicator","forceMount","indicatorProps","context","BubbleInput","control","bubbles","inputProps","ref","prevChecked","usePrevious","controlSize","useSize","input","inputProto","window","HTMLInputElement","prototype","descriptor","Object","getOwnPropertyDescriptor","setChecked","set","Event","call","dispatchEvent","style","position","pointerEvents","opacity","margin","ARROW_KEYS","RADIO_GROUP_NAME","createRadioGroupContext","createRadioGroupScope","createRovingFocusGroupScope","useRovingFocusGroupScope","useRadioScope","RadioGroupProvider","useRadioGroupContext","RadioGroup","__scopeRadioGroup","defaultValue","valueProp","orientation","dir","loop","onValueChange","groupProps","rovingFocusGroupScope","direction","useDirection","setValue","useControllableState","prop","defaultProp","onChange","ITEM_NAME","RadioGroupItem","itemProps","isDisabled","radioScope","isArrowKeyPressedRef","handleKeyDown","includes","key","handleKeyUp","document","addEventListener","removeEventListener","preventDefault","onFocus","click","RadioGroupIndicator","Root","Item","Indicator"],"mappings":"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"}},
    {"offset": {"line": 1331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1336, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@radix-ui/react-avatar/dist/packages/react/avatar/src/index.ts","/turbopack/[project]/node_modules/@radix-ui/react-avatar/dist/packages/react/avatar/src/Avatar.tsx"],"sourcesContent":["export {\n  createAvatarScope,\n  //\n  Avatar,\n  AvatarImage,\n  AvatarFallback,\n  //\n  Root,\n  Image,\n  Fallback,\n} from './Avatar';\nexport type { AvatarProps, AvatarImageProps, AvatarFallbackProps } from './Avatar';\n","import * as React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Avatar\n * -----------------------------------------------------------------------------------------------*/\n\nconst AVATAR_NAME = 'Avatar';\n\ntype ScopedProps<P> = P & { __scopeAvatar?: Scope };\nconst [createAvatarContext, createAvatarScope] = createContextScope(AVATAR_NAME);\n\ntype ImageLoadingStatus = 'idle' | 'loading' | 'loaded' | 'error';\n\ntype AvatarContextValue = {\n  imageLoadingStatus: ImageLoadingStatus;\n  onImageLoadingStatusChange(status: ImageLoadingStatus): void;\n};\n\nconst [AvatarProvider, useAvatarContext] = createAvatarContext<AvatarContextValue>(AVATAR_NAME);\n\ntype AvatarElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface AvatarProps extends PrimitiveSpanProps {}\n\nconst Avatar = React.forwardRef<AvatarElement, AvatarProps>(\n  (props: ScopedProps<AvatarProps>, forwardedRef) => {\n    const { __scopeAvatar, ...avatarProps } = props;\n    const [imageLoadingStatus, setImageLoadingStatus] = React.useState<ImageLoadingStatus>('idle');\n    return (\n      <AvatarProvider\n        scope={__scopeAvatar}\n        imageLoadingStatus={imageLoadingStatus}\n        onImageLoadingStatusChange={setImageLoadingStatus}\n      >\n        <Primitive.span {...avatarProps} ref={forwardedRef} />\n      </AvatarProvider>\n    );\n  }\n);\n\nAvatar.displayName = AVATAR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AvatarImage\n * -----------------------------------------------------------------------------------------------*/\n\nconst IMAGE_NAME = 'AvatarImage';\n\ntype AvatarImageElement = React.ElementRef<typeof Primitive.img>;\ntype PrimitiveImageProps = Radix.ComponentPropsWithoutRef<typeof Primitive.img>;\ninterface AvatarImageProps extends PrimitiveImageProps {\n  onLoadingStatusChange?: (status: ImageLoadingStatus) => void;\n}\n\nconst AvatarImage = React.forwardRef<AvatarImageElement, AvatarImageProps>(\n  (props: ScopedProps<AvatarImageProps>, forwardedRef) => {\n    const { __scopeAvatar, src, onLoadingStatusChange = () => {}, ...imageProps } = props;\n    const context = useAvatarContext(IMAGE_NAME, __scopeAvatar);\n    const imageLoadingStatus = useImageLoadingStatus(src);\n    const handleLoadingStatusChange = useCallbackRef((status: ImageLoadingStatus) => {\n      onLoadingStatusChange(status);\n      context.onImageLoadingStatusChange(status);\n    });\n\n    useLayoutEffect(() => {\n      if (imageLoadingStatus !== 'idle') {\n        handleLoadingStatusChange(imageLoadingStatus);\n      }\n    }, [imageLoadingStatus, handleLoadingStatusChange]);\n\n    return imageLoadingStatus === 'loaded' ? (\n      <Primitive.img {...imageProps} ref={forwardedRef} src={src} />\n    ) : null;\n  }\n);\n\nAvatarImage.displayName = IMAGE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AvatarFallback\n * -----------------------------------------------------------------------------------------------*/\n\nconst FALLBACK_NAME = 'AvatarFallback';\n\ntype AvatarFallbackElement = React.ElementRef<typeof Primitive.span>;\ninterface AvatarFallbackProps extends PrimitiveSpanProps {\n  delayMs?: number;\n}\n\nconst AvatarFallback = React.forwardRef<AvatarFallbackElement, AvatarFallbackProps>(\n  (props: ScopedProps<AvatarFallbackProps>, forwardedRef) => {\n    const { __scopeAvatar, delayMs, ...fallbackProps } = props;\n    const context = useAvatarContext(FALLBACK_NAME, __scopeAvatar);\n    const [canRender, setCanRender] = React.useState(delayMs === undefined);\n\n    React.useEffect(() => {\n      if (delayMs !== undefined) {\n        const timerId = window.setTimeout(() => setCanRender(true), delayMs);\n        return () => window.clearTimeout(timerId);\n      }\n    }, [delayMs]);\n\n    return canRender && context.imageLoadingStatus !== 'loaded' ? (\n      <Primitive.span {...fallbackProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nAvatarFallback.displayName = FALLBACK_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useImageLoadingStatus(src?: string) {\n  const [loadingStatus, setLoadingStatus] = React.useState<ImageLoadingStatus>('idle');\n\n  useLayoutEffect(() => {\n    if (!src) {\n      setLoadingStatus('error');\n      return;\n    }\n\n    let isMounted = true;\n    const image = new window.Image();\n\n    const updateStatus = (status: ImageLoadingStatus) => () => {\n      if (!isMounted) return;\n      setLoadingStatus(status);\n    };\n\n    setLoadingStatus('loading');\n    image.onload = updateStatus('loaded');\n    image.onerror = updateStatus('error');\n    image.src = src;\n\n    return () => {\n      isMounted = false;\n    };\n  }, [src]);\n\n  return loadingStatus;\n}\nconst Root = Avatar;\nconst Image = AvatarImage;\nconst Fallback = AvatarFallback;\n\nexport {\n  createAvatarScope,\n  //\n  Avatar,\n  AvatarImage,\n  AvatarFallback,\n  //\n  Root,\n  Image,\n  Fallback,\n};\nexport type { AvatarProps, AvatarImageProps, AvatarFallbackProps };\n"],"names":["AVATAR_NAME","createAvatarContext","createAvatarScope","createContextScope","AvatarProvider","useAvatarContext","Avatar","React","props","forwardedRef","__scopeAvatar","avatarProps","imageLoadingStatus","setImageLoadingStatus","IMAGE_NAME","AvatarImage","src","onLoadingStatusChange","imageProps","context","useImageLoadingStatus","handleLoadingStatusChange","useCallbackRef","status","onImageLoadingStatusChange","useLayoutEffect","FALLBACK_NAME","AvatarFallback","delayMs","fallbackProps","canRender","setCanRender","undefined","timerId","window","setTimeout","clearTimeout","loadingStatus","setLoadingStatus","isMounted","image","Image","updateStatus","onload","onerror","Root","Fallback"],"mappings":"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"}},
    {"offset": {"line": 1454, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1459, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@radix-ui/react-arrow/dist/packages/react/arrow/src/index.ts","/turbopack/[project]/node_modules/@radix-ui/react-arrow/dist/packages/react/arrow/src/Arrow.tsx"],"sourcesContent":["export {\n  Arrow,\n  //\n  Root,\n} from './Arrow';\nexport type { ArrowProps } from './Arrow';\n","import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Arrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Arrow';\n\ntype ArrowElement = React.ElementRef<typeof Primitive.svg>;\ntype PrimitiveSvgProps = Radix.ComponentPropsWithoutRef<typeof Primitive.svg>;\ninterface ArrowProps extends PrimitiveSvgProps {}\n\nconst Arrow = React.forwardRef<ArrowElement, ArrowProps>((props, forwardedRef) => {\n  const { children, width = 10, height = 5, ...arrowProps } = props;\n  return (\n    <Primitive.svg\n      {...arrowProps}\n      ref={forwardedRef}\n      width={width}\n      height={height}\n      viewBox=\"0 0 30 10\"\n      preserveAspectRatio=\"none\"\n    >\n      {/* We use their children if they're slotting to replace the whole svg */}\n      {props.asChild ? children : <polygon points=\"0,0 30,0 15,10\" />}\n    </Primitive.svg>\n  );\n});\n\nArrow.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Arrow;\n\nexport {\n  Arrow,\n  //\n  Root,\n};\nexport type { ArrowProps };\n"],"names":["NAME","Arrow","React","props","forwardedRef","children","width","height","arrowProps","asChild","Root"],"mappings":";;;;;;;;;;;ACKA;;qGAIA,MAAMA,6BAAO;AAMb,MAAMC,4CAAK,WAAA,GAAGC,CAAAA,GAAAA,+MAAAA,CAAAA,aAAA,AAAAA,EAA2C,CAACC,OAAOC;IAC/D,MAAM,EAAA,UAAEC,QAAF,EAAA,OAAYC,QAAQ,EAApB,EAAA,QAAwBC,SAAS,CAAjC,EAAoC,GAAGC,YAAvC,GAAsDL;IAC5D,OAAA,WAAA,GACE,CAAA,GAAA,+MAAA,CAAA,gBAAA,EAAC,qKAAA,CAAA,YAAD,CAAW,GAAX,EAAA,CAAA,GAAA,+JAAA,CAAA,UAAA,EAAA,CAAA,GACMK,YAFR;QAGI,KAAKJ;QACL,OAAOE;QACP,QAAQC;QACR,SAAQ;QACR,qBAAoB;QAGnBJ,MAAMM,OAAN,GAAgBJ,WAAhB,WAAA,GAA2B,CAAA,GAAA,+MAAA,CAAA,gBAT9B,AAS8B,EAT9B,WAAA;QASuC,QAAO;;;AAKlD,WAAA,GAAA,OAAA,MAAA,CAAA,2CAAA;IAAA,aAAA;;AAEA,kGAAA,GAEA,MAAMK,4CAAOT"}},
    {"offset": {"line": 1491, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1496, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@radix-ui/react-popper/dist/packages/react/popper/src/index.ts","/turbopack/[project]/node_modules/@radix-ui/react-popper/dist/packages/react/popper/src/Popper.tsx"],"sourcesContent":["export {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n  //\n  SIDE_OPTIONS,\n  ALIGN_OPTIONS,\n} from './Popper';\nexport type {\n  PopperProps,\n  PopperAnchorProps,\n  PopperContentProps,\n  PopperArrowProps,\n} from './Popper';\n","import * as React from 'react';\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  shift,\n  limitShift,\n  hide,\n  arrow as floatingUIarrow,\n  flip,\n  size,\n} from '@floating-ui/react-dom';\nimport * as ArrowPrimitive from '@radix-ui/react-arrow';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useSize } from '@radix-ui/react-use-size';\n\nimport type { Placement, Middleware } from '@floating-ui/react-dom';\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\nimport type { Measurable } from '@radix-ui/rect';\n\nconst SIDE_OPTIONS = ['top', 'right', 'bottom', 'left'] as const;\nconst ALIGN_OPTIONS = ['start', 'center', 'end'] as const;\n\ntype Side = typeof SIDE_OPTIONS[number];\ntype Align = typeof ALIGN_OPTIONS[number];\n\n/* -------------------------------------------------------------------------------------------------\n * Popper\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_NAME = 'Popper';\n\ntype ScopedProps<P> = P & { __scopePopper?: Scope };\nconst [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\n\ntype PopperContextValue = {\n  anchor: Measurable | null;\n  onAnchorChange(anchor: Measurable | null): void;\n};\nconst [PopperProvider, usePopperContext] = createPopperContext<PopperContextValue>(POPPER_NAME);\n\ninterface PopperProps {\n  children?: React.ReactNode;\n}\nconst Popper: React.FC<PopperProps> = (props: ScopedProps<PopperProps>) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState<Measurable | null>(null);\n  return (\n    <PopperProvider scope={__scopePopper} anchor={anchor} onAnchorChange={setAnchor}>\n      {children}\n    </PopperProvider>\n  );\n};\n\nPopper.displayName = POPPER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopperAnchor';\n\ntype PopperAnchorElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PopperAnchorProps extends PrimitiveDivProps {\n  virtualRef?: React.RefObject<Measurable>;\n}\n\nconst PopperAnchor = React.forwardRef<PopperAnchorElement, PopperAnchorProps>(\n  (props: ScopedProps<PopperAnchorProps>, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef<PopperAnchorElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    React.useEffect(() => {\n      // Consumer can anchor the popper to something that isn't\n      // a DOM node e.g. pointer position, so we override the\n      // `anchorRef` with their virtual ref in this case.\n      context.onAnchorChange(virtualRef?.current || ref.current);\n    });\n\n    return virtualRef ? null : <Primitive.div {...anchorProps} ref={composedRefs} />;\n  }\n);\n\nPopperAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopperContent';\n\ntype PopperContentContextValue = {\n  placedSide: Side;\n  onArrowChange(arrow: HTMLSpanElement | null): void;\n  arrowX?: number;\n  arrowY?: number;\n  shouldHideArrow: boolean;\n};\n\nconst [PopperContentProvider, useContentContext] =\n  createPopperContext<PopperContentContextValue>(CONTENT_NAME);\n\ntype Boundary = Element | null;\n\ntype PopperContentElement = React.ElementRef<typeof Primitive.div>;\ninterface PopperContentProps extends PrimitiveDivProps {\n  side?: Side;\n  sideOffset?: number;\n  align?: Align;\n  alignOffset?: number;\n  arrowPadding?: number;\n  avoidCollisions?: boolean;\n  collisionBoundary?: Boundary | Boundary[];\n  collisionPadding?: number | Partial<Record<Side, number>>;\n  sticky?: 'partial' | 'always';\n  hideWhenDetached?: boolean;\n  updatePositionStrategy?: 'optimized' | 'always';\n  onPlaced?: () => void;\n}\n\nconst PopperContent = React.forwardRef<PopperContentElement, PopperContentProps>(\n  (props: ScopedProps<PopperContentProps>, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = 'bottom',\n      sideOffset = 0,\n      align = 'center',\n      alignOffset = 0,\n      arrowPadding = 0,\n      avoidCollisions = true,\n      collisionBoundary = [],\n      collisionPadding: collisionPaddingProp = 0,\n      sticky = 'partial',\n      hideWhenDetached = false,\n      updatePositionStrategy = 'optimized',\n      onPlaced,\n      ...contentProps\n    } = props;\n\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n\n    const [arrow, setArrow] = React.useState<HTMLSpanElement | null>(null);\n    const arrowSize = useSize(arrow);\n    const arrowWidth = arrowSize?.width ?? 0;\n    const arrowHeight = arrowSize?.height ?? 0;\n\n    const desiredPlacement = (side + (align !== 'center' ? '-' + align : '')) as Placement;\n\n    const collisionPadding =\n      typeof collisionPaddingProp === 'number'\n        ? collisionPaddingProp\n        : { top: 0, right: 0, bottom: 0, left: 0, ...collisionPaddingProp };\n\n    const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [collisionBoundary];\n    const hasExplicitBoundaries = boundary.length > 0;\n\n    const detectOverflowOptions = {\n      padding: collisionPadding,\n      boundary: boundary.filter(isNotNull),\n      // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n      altBoundary: hasExplicitBoundaries,\n    };\n\n    const { refs, floatingStyles, placement, isPositioned, middlewareData } = useFloating({\n      // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues\n      strategy: 'fixed',\n      placement: desiredPlacement,\n      whileElementsMounted: (...args) => {\n        const cleanup = autoUpdate(...args, {\n          animationFrame: updatePositionStrategy === 'always',\n        });\n        return cleanup;\n      },\n      elements: {\n        reference: context.anchor,\n      },\n      middleware: [\n        offset({ mainAxis: sideOffset + arrowHeight, alignmentAxis: alignOffset }),\n        avoidCollisions &&\n          shift({\n            mainAxis: true,\n            crossAxis: false,\n            limiter: sticky === 'partial' ? limitShift() : undefined,\n            ...detectOverflowOptions,\n          }),\n        avoidCollisions && flip({ ...detectOverflowOptions }),\n        size({\n          ...detectOverflowOptions,\n          apply: ({ elements, rects, availableWidth, availableHeight }) => {\n            const { width: anchorWidth, height: anchorHeight } = rects.reference;\n            const contentStyle = elements.floating.style;\n            contentStyle.setProperty('--radix-popper-available-width', `${availableWidth}px`);\n            contentStyle.setProperty('--radix-popper-available-height', `${availableHeight}px`);\n            contentStyle.setProperty('--radix-popper-anchor-width', `${anchorWidth}px`);\n            contentStyle.setProperty('--radix-popper-anchor-height', `${anchorHeight}px`);\n          },\n        }),\n        arrow && floatingUIarrow({ element: arrow, padding: arrowPadding }),\n        transformOrigin({ arrowWidth, arrowHeight }),\n        hideWhenDetached && hide({ strategy: 'referenceHidden', ...detectOverflowOptions }),\n      ],\n    });\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n\n    const handlePlaced = useCallbackRef(onPlaced);\n    useLayoutEffect(() => {\n      if (isPositioned) {\n        handlePlaced?.();\n      }\n    }, [isPositioned, handlePlaced]);\n\n    const arrowX = middlewareData.arrow?.x;\n    const arrowY = middlewareData.arrow?.y;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n\n    const [contentZIndex, setContentZIndex] = React.useState<string>();\n    useLayoutEffect(() => {\n      if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n    }, [content]);\n\n    return (\n      <div\n        ref={refs.setFloating}\n        data-radix-popper-content-wrapper=\"\"\n        style={{\n          ...floatingStyles,\n          transform: isPositioned ? floatingStyles.transform : 'translate(0, -200%)', // keep off the page when measuring\n          minWidth: 'max-content',\n          zIndex: contentZIndex,\n          ['--radix-popper-transform-origin' as any]: [\n            middlewareData.transformOrigin?.x,\n            middlewareData.transformOrigin?.y,\n          ].join(' '),\n        }}\n        // Floating UI interally calculates logical alignment based the `dir` attribute on\n        // the reference/floating node, we must add this attribute here to ensure\n        // this is calculated when portalled as well as inline.\n        dir={props.dir}\n      >\n        <PopperContentProvider\n          scope={__scopePopper}\n          placedSide={placedSide}\n          onArrowChange={setArrow}\n          arrowX={arrowX}\n          arrowY={arrowY}\n          shouldHideArrow={cannotCenterArrow}\n        >\n          <Primitive.div\n            data-side={placedSide}\n            data-align={placedAlign}\n            {...contentProps}\n            ref={composedRefs}\n            style={{\n              ...contentProps.style,\n              // if the PopperContent hasn't been placed yet (not all measurements done)\n              // we prevent animations so that users's animation don't kick in too early referring wrong sides\n              animation: !isPositioned ? 'none' : undefined,\n              // hide the content if using the hide middleware and should be hidden\n              opacity: middlewareData.hide?.referenceHidden ? 0 : undefined,\n            }}\n          />\n        </PopperContentProvider>\n      </div>\n    );\n  }\n);\n\nPopperContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopperArrow';\n\nconst OPPOSITE_SIDE: Record<Side, Side> = {\n  top: 'bottom',\n  right: 'left',\n  bottom: 'top',\n  left: 'right',\n};\n\ntype PopperArrowElement = React.ElementRef<typeof ArrowPrimitive.Root>;\ntype ArrowProps = Radix.ComponentPropsWithoutRef<typeof ArrowPrimitive.Root>;\ninterface PopperArrowProps extends ArrowProps {}\n\nconst PopperArrow = React.forwardRef<PopperArrowElement, PopperArrowProps>(function PopperArrow(\n  props: ScopedProps<PopperArrowProps>,\n  forwardedRef\n) {\n  const { __scopePopper, ...arrowProps } = props;\n  const contentContext = useContentContext(ARROW_NAME, __scopePopper);\n  const baseSide = OPPOSITE_SIDE[contentContext.placedSide];\n\n  return (\n    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n    // doesn't report size as we'd expect on SVG elements.\n    // it reports their bounding box which is effectively the largest path inside the SVG.\n    <span\n      ref={contentContext.onArrowChange}\n      style={{\n        position: 'absolute',\n        left: contentContext.arrowX,\n        top: contentContext.arrowY,\n        [baseSide]: 0,\n        transformOrigin: {\n          top: '',\n          right: '0 0',\n          bottom: 'center 0',\n          left: '100% 0',\n        }[contentContext.placedSide],\n        transform: {\n          top: 'translateY(100%)',\n          right: 'translateY(50%) rotate(90deg) translateX(-50%)',\n          bottom: `rotate(180deg)`,\n          left: 'translateY(50%) rotate(-90deg) translateX(50%)',\n        }[contentContext.placedSide],\n        visibility: contentContext.shouldHideArrow ? 'hidden' : undefined,\n      }}\n    >\n      <ArrowPrimitive.Root\n        {...arrowProps}\n        ref={forwardedRef}\n        style={{\n          ...arrowProps.style,\n          // ensures the element can be measured correctly (mostly for if SVG)\n          display: 'block',\n        }}\n      />\n    </span>\n  );\n});\n\nPopperArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction isNotNull<T>(value: T | null): value is T {\n  return value !== null;\n}\n\nconst transformOrigin = (options: { arrowWidth: number; arrowHeight: number }): Middleware => ({\n  name: 'transformOrigin',\n  options,\n  fn(data) {\n    const { placement, rects, middlewareData } = data;\n\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const isArrowHidden = cannotCenterArrow;\n    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;\n    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const noArrowAlign = { start: '0%', center: '50%', end: '100%' }[placedAlign];\n\n    const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2;\n    const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2;\n\n    let x = '';\n    let y = '';\n\n    if (placedSide === 'bottom') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${-arrowHeight}px`;\n    } else if (placedSide === 'top') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${rects.floating.height + arrowHeight}px`;\n    } else if (placedSide === 'right') {\n      x = `${-arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    } else if (placedSide === 'left') {\n      x = `${rects.floating.width + arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    }\n    return { data: { x, y } };\n  },\n});\n\nfunction getSideAndAlignFromPlacement(placement: Placement) {\n  const [side, align = 'center'] = placement.split('-');\n  return [side as Side, align as Align] as const;\n}\n\nconst Root = Popper;\nconst Anchor = PopperAnchor;\nconst Content = PopperContent;\nconst Arrow = PopperArrow;\n\nexport {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n  //\n  SIDE_OPTIONS,\n  ALIGN_OPTIONS,\n};\nexport type { PopperProps, PopperAnchorProps, PopperContentProps, PopperArrowProps };\n"],"names":["SIDE_OPTIONS","ALIGN_OPTIONS","POPPER_NAME","createPopperContext","createPopperScope","createContextScope","PopperProvider","usePopperContext","Popper","props","__scopePopper","children","anchor","setAnchor","React","ANCHOR_NAME","PopperAnchor","forwardedRef","virtualRef","anchorProps","context","ref","composedRefs","useComposedRefs","onAnchorChange","current","CONTENT_NAME","PopperContentProvider","useContentContext","PopperContent","side","sideOffset","align","alignOffset","arrowPadding","avoidCollisions","collisionBoundary","collisionPadding","collisionPaddingProp","sticky","hideWhenDetached","updatePositionStrategy","onPlaced","contentProps","content","setContent","node","arrow","setArrow","arrowSize","useSize","arrowWidth","width","arrowHeight","height","desiredPlacement","top","right","bottom","left","boundary","Array","isArray","hasExplicitBoundaries","length","detectOverflowOptions","padding","filter","isNotNull","altBoundary","refs","floatingStyles","placement","isPositioned","middlewareData","useFloating","strategy","whileElementsMounted","args","cleanup","autoUpdate","animationFrame","elements","reference","middleware","offset","mainAxis","alignmentAxis","shift","crossAxis","limiter","limitShift","undefined","flip","size","apply","rects","availableWidth","availableHeight","anchorWidth","anchorHeight","contentStyle","floating","style","setProperty","floatingUIarrow","element","transformOrigin","hide","placedSide","placedAlign","getSideAndAlignFromPlacement","handlePlaced","useCallbackRef","useLayoutEffect","arrowX","x","arrowY","y","cannotCenterArrow","centerOffset","contentZIndex","setContentZIndex","window","getComputedStyle","zIndex","setFloating","transform","minWidth","join","dir","animation","opacity","referenceHidden","ARROW_NAME","OPPOSITE_SIDE","PopperArrow","arrowProps","contentContext","baseSide","onArrowChange","position","visibility","shouldHideArrow","display","value","options","name","fn","data","isArrowHidden","noArrowAlign","start","center","end","arrowXCenter","arrowYCenter","split","Root","Anchor","Content","Arrow"],"mappings":"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"}},
    {"offset": {"line": 1827, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1832, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@radix-ui/react-popover/dist/packages/react/popover/src/index.ts","/turbopack/[project]/node_modules/@radix-ui/react-popover/dist/packages/react/popover/src/Popover.tsx"],"sourcesContent":["export {\n  createPopoverScope,\n  //\n  Popover,\n  PopoverAnchor,\n  PopoverTrigger,\n  PopoverPortal,\n  PopoverContent,\n  PopoverClose,\n  PopoverArrow,\n  //\n  Root,\n  Anchor,\n  Trigger,\n  Portal,\n  Content,\n  Close,\n  Arrow,\n} from './Popover';\nexport type {\n  PopoverProps,\n  PopoverAnchorProps,\n  PopoverTriggerProps,\n  PopoverPortalProps,\n  PopoverContentProps,\n  PopoverCloseProps,\n  PopoverArrowProps,\n} from './Popover';\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Slot } from '@radix-ui/react-slot';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Popover\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPOVER_NAME = 'Popover';\n\ntype ScopedProps<P> = P & { __scopePopover?: Scope };\nconst [createPopoverContext, createPopoverScope] = createContextScope(POPOVER_NAME, [\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\ntype PopoverContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  hasCustomAnchor: boolean;\n  onCustomAnchorAdd(): void;\n  onCustomAnchorRemove(): void;\n  modal: boolean;\n};\n\nconst [PopoverProvider, usePopoverContext] =\n  createPopoverContext<PopoverContextValue>(POPOVER_NAME);\n\ninterface PopoverProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  modal?: boolean;\n}\n\nconst Popover: React.FC<PopoverProps> = (props: ScopedProps<PopoverProps>) => {\n  const {\n    __scopePopover,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = false,\n  } = props;\n  const popperScope = usePopperScope(__scopePopover);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const [hasCustomAnchor, setHasCustomAnchor] = React.useState(false);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <PopoverProvider\n        scope={__scopePopover}\n        contentId={useId()}\n        triggerRef={triggerRef}\n        open={open}\n        onOpenChange={setOpen}\n        onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n        hasCustomAnchor={hasCustomAnchor}\n        onCustomAnchorAdd={React.useCallback(() => setHasCustomAnchor(true), [])}\n        onCustomAnchorRemove={React.useCallback(() => setHasCustomAnchor(false), [])}\n        modal={modal}\n      >\n        {children}\n      </PopoverProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nPopover.displayName = POPOVER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopoverAnchor';\n\ntype PopoverAnchorElement = React.ElementRef<typeof PopperPrimitive.Anchor>;\ntype PopperAnchorProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Anchor>;\ninterface PopoverAnchorProps extends PopperAnchorProps {}\n\nconst PopoverAnchor = React.forwardRef<PopoverAnchorElement, PopoverAnchorProps>(\n  (props: ScopedProps<PopoverAnchorProps>, forwardedRef) => {\n    const { __scopePopover, ...anchorProps } = props;\n    const context = usePopoverContext(ANCHOR_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const { onCustomAnchorAdd, onCustomAnchorRemove } = context;\n\n    React.useEffect(() => {\n      onCustomAnchorAdd();\n      return () => onCustomAnchorRemove();\n    }, [onCustomAnchorAdd, onCustomAnchorRemove]);\n\n    return <PopperPrimitive.Anchor {...popperScope} {...anchorProps} ref={forwardedRef} />;\n  }\n);\n\nPopoverAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'PopoverTrigger';\n\ntype PopoverTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface PopoverTriggerProps extends PrimitiveButtonProps {}\n\nconst PopoverTrigger = React.forwardRef<PopoverTriggerElement, PopoverTriggerProps>(\n  (props: ScopedProps<PopoverTriggerProps>, forwardedRef) => {\n    const { __scopePopover, ...triggerProps } = props;\n    const context = usePopoverContext(TRIGGER_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n\n    const trigger = (\n      <Primitive.button\n        type=\"button\"\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n\n    return context.hasCustomAnchor ? (\n      trigger\n    ) : (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        {trigger}\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nPopoverTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'PopoverPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createPopoverContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface PopoverPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst PopoverPortal: React.FC<PopoverPortalProps> = (props: ScopedProps<PopoverPortalProps>) => {\n  const { __scopePopover, forceMount, children, container } = props;\n  const context = usePopoverContext(PORTAL_NAME, __scopePopover);\n  return (\n    <PortalProvider scope={__scopePopover} forceMount={forceMount}>\n      <Presence present={forceMount || context.open}>\n        <PortalPrimitive asChild container={container}>\n          {children}\n        </PortalPrimitive>\n      </Presence>\n    </PortalProvider>\n  );\n};\n\nPopoverPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopoverContent';\n\ninterface PopoverContentProps extends PopoverContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst PopoverContent = React.forwardRef<PopoverContentTypeElement, PopoverContentProps>(\n  (props: ScopedProps<PopoverContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopePopover);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.modal ? (\n          <PopoverContentModal {...contentProps} ref={forwardedRef} />\n        ) : (\n          <PopoverContentNonModal {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nPopoverContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PopoverContentTypeElement = PopoverContentImplElement;\ninterface PopoverContentTypeProps\n  extends Omit<PopoverContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {}\n\nconst PopoverContentModal = React.forwardRef<PopoverContentTypeElement, PopoverContentTypeProps>(\n  (props: ScopedProps<PopoverContentTypeProps>, forwardedRef) => {\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n    const isRightClickOutsideRef = React.useRef(false);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <RemoveScroll as={Slot} allowPinchZoom>\n        <PopoverContentImpl\n          {...props}\n          ref={composedRefs}\n          // we make sure we're not trapping once it's been closed\n          // (closed !== unmounted when animating out)\n          trapFocus={context.open}\n          disableOutsidePointerEvents\n          onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n            event.preventDefault();\n            if (!isRightClickOutsideRef.current) context.triggerRef.current?.focus();\n          })}\n          onPointerDownOutside={composeEventHandlers(\n            props.onPointerDownOutside,\n            (event) => {\n              const originalEvent = event.detail.originalEvent;\n              const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n              const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n              isRightClickOutsideRef.current = isRightClick;\n            },\n            { checkForDefaultPrevented: false }\n          )}\n          // When focus is trapped, a `focusout` event may still happen.\n          // We make sure we don't trigger our `onDismiss` in such case.\n          onFocusOutside={composeEventHandlers(\n            props.onFocusOutside,\n            (event) => event.preventDefault(),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </RemoveScroll>\n    );\n  }\n);\n\nconst PopoverContentNonModal = React.forwardRef<PopoverContentTypeElement, PopoverContentTypeProps>(\n  (props: ScopedProps<PopoverContentTypeProps>, forwardedRef) => {\n    const context = usePopoverContext(CONTENT_NAME, props.__scopePopover);\n    const hasInteractedOutsideRef = React.useRef(false);\n    const hasPointerDownOutsideRef = React.useRef(false);\n\n    return (\n      <PopoverContentImpl\n        {...props}\n        ref={forwardedRef}\n        trapFocus={false}\n        disableOutsidePointerEvents={false}\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            // Always prevent auto focus because we either focus manually or want user agent focus\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n          hasPointerDownOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented) {\n            hasInteractedOutsideRef.current = true;\n            if (event.detail.originalEvent.type === 'pointerdown') {\n              hasPointerDownOutsideRef.current = true;\n            }\n          }\n\n          // Prevent dismissing when clicking the trigger.\n          // As the trigger is already setup to close, without doing so would\n          // cause it to close and immediately open.\n          const target = event.target as HTMLElement;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n\n          // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n          // we will get the pointer down outside event on the trigger, but then a subsequent\n          // focus outside event on the container, we ignore any focus outside event when we've\n          // already had a pointer down outside event.\n          if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) {\n            event.preventDefault();\n          }\n        }}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PopoverContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype FocusScopeProps = Radix.ComponentPropsWithoutRef<typeof FocusScope>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype PopperContentProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface PopoverContentImplProps\n  extends Omit<PopperContentProps, 'onPlaced'>,\n    Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * Whether focus should be trapped within the `Popover`\n   * (default: false)\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst PopoverContentImpl = React.forwardRef<PopoverContentImplElement, PopoverContentImplProps>(\n  (props: ScopedProps<PopoverContentImplProps>, forwardedRef) => {\n    const {\n      __scopePopover,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      disableOutsidePointerEvents,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      ...contentProps\n    } = props;\n    const context = usePopoverContext(CONTENT_NAME, __scopePopover);\n    const popperScope = usePopperScope(__scopePopover);\n\n    // Make sure the whole tree has focus guards as our `Popover` may be\n    // the last element in the DOM (beacuse of the `Portal`)\n    useFocusGuards();\n\n    return (\n      <FocusScope\n        asChild\n        loop\n        trapped={trapFocus}\n        onMountAutoFocus={onOpenAutoFocus}\n        onUnmountAutoFocus={onCloseAutoFocus}\n      >\n        <DismissableLayer\n          asChild\n          disableOutsidePointerEvents={disableOutsidePointerEvents}\n          onInteractOutside={onInteractOutside}\n          onEscapeKeyDown={onEscapeKeyDown}\n          onPointerDownOutside={onPointerDownOutside}\n          onFocusOutside={onFocusOutside}\n          onDismiss={() => context.onOpenChange(false)}\n        >\n          <PopperPrimitive.Content\n            data-state={getState(context.open)}\n            role=\"dialog\"\n            id={context.contentId}\n            {...popperScope}\n            {...contentProps}\n            ref={forwardedRef}\n            style={{\n              ...contentProps.style,\n              // re-namespace exposed content custom properties\n              ...{\n                '--radix-popover-content-transform-origin': 'var(--radix-popper-transform-origin)',\n                '--radix-popover-content-available-width': 'var(--radix-popper-available-width)',\n                '--radix-popover-content-available-height': 'var(--radix-popper-available-height)',\n                '--radix-popover-trigger-width': 'var(--radix-popper-anchor-width)',\n                '--radix-popover-trigger-height': 'var(--radix-popper-anchor-height)',\n              },\n            }}\n          />\n        </DismissableLayer>\n      </FocusScope>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'PopoverClose';\n\ntype PopoverCloseElement = React.ElementRef<typeof Primitive.button>;\ninterface PopoverCloseProps extends PrimitiveButtonProps {}\n\nconst PopoverClose = React.forwardRef<PopoverCloseElement, PopoverCloseProps>(\n  (props: ScopedProps<PopoverCloseProps>, forwardedRef) => {\n    const { __scopePopover, ...closeProps } = props;\n    const context = usePopoverContext(CLOSE_NAME, __scopePopover);\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, () => context.onOpenChange(false))}\n      />\n    );\n  }\n);\n\nPopoverClose.displayName = CLOSE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopoverArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopoverArrow';\n\ntype PopoverArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface PopoverArrowProps extends PopperArrowProps {}\n\nconst PopoverArrow = React.forwardRef<PopoverArrowElement, PopoverArrowProps>(\n  (props: ScopedProps<PopoverArrowProps>, forwardedRef) => {\n    const { __scopePopover, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopePopover);\n    return <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nPopoverArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst Root = Popover;\nconst Anchor = PopoverAnchor;\nconst Trigger = PopoverTrigger;\nconst Portal = PopoverPortal;\nconst Content = PopoverContent;\nconst Close = PopoverClose;\nconst Arrow = PopoverArrow;\n\nexport {\n  createPopoverScope,\n  //\n  Popover,\n  PopoverAnchor,\n  PopoverTrigger,\n  PopoverPortal,\n  PopoverContent,\n  PopoverClose,\n  PopoverArrow,\n  //\n  Root,\n  Anchor,\n  Trigger,\n  Portal,\n  Content,\n  Close,\n  Arrow,\n};\nexport type {\n  PopoverProps,\n  PopoverAnchorProps,\n  PopoverTriggerProps,\n  PopoverPortalProps,\n  PopoverContentProps,\n  PopoverCloseProps,\n  PopoverArrowProps,\n};\n"],"names":["POPOVER_NAME","createPopoverContext","createPopoverScope","createContextScope","createPopperScope","usePopperScope","PopoverProvider","usePopoverContext","Popover","props","__scopePopover","children","open","openProp","defaultOpen","onOpenChange","modal","popperScope","triggerRef","React","hasCustomAnchor","setHasCustomAnchor","setOpen","useControllableState","prop","defaultProp","onChange","useId","prevOpen","ANCHOR_NAME","PopoverAnchor","forwardedRef","anchorProps","context","onCustomAnchorAdd","onCustomAnchorRemove","TRIGGER_NAME","PopoverTrigger","triggerProps","composedTriggerRef","useComposedRefs","trigger","contentId","getState","composeEventHandlers","onClick","onOpenToggle","PORTAL_NAME","PortalProvider","usePortalContext","forceMount","undefined","PopoverPortal","container","CONTENT_NAME","PopoverContent","portalContext","contentProps","PopoverContentModal","contentRef","composedRefs","isRightClickOutsideRef","content","current","hideOthers","Slot","onCloseAutoFocus","event","preventDefault","focus","onPointerDownOutside","originalEvent","detail","ctrlLeftClick","button","ctrlKey","isRightClick","checkForDefaultPrevented","onFocusOutside","PopoverContentNonModal","hasInteractedOutsideRef","hasPointerDownOutsideRef","defaultPrevented","onInteractOutside","type","target","targetIsTrigger","contains","PopoverContentImpl","trapFocus","onOpenAutoFocus","disableOutsidePointerEvents","onEscapeKeyDown","useFocusGuards","style","CLOSE_NAME","PopoverClose","closeProps","ARROW_NAME","PopoverArrow","arrowProps","Root","Anchor","Trigger","Portal","Content","Close","Arrow"],"mappings":"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"}},
    {"offset": {"line": 2158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2163, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@radix-ui/react-tabs/dist/packages/react/tabs/src/index.ts","/turbopack/[project]/node_modules/@radix-ui/react-tabs/dist/packages/react/tabs/src/Tabs.tsx"],"sourcesContent":["export {\n  createTabsScope,\n  //\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  //\n  Root,\n  List,\n  Trigger,\n  Content,\n} from './Tabs';\nexport type { TabsProps, TabsListProps, TabsTriggerProps, TabsContentProps } from './Tabs';\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useId } from '@radix-ui/react-id';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Tabs\n * -----------------------------------------------------------------------------------------------*/\n\nconst TABS_NAME = 'Tabs';\n\ntype ScopedProps<P> = P & { __scopeTabs?: Scope };\nconst [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [\n  createRovingFocusGroupScope,\n]);\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype TabsContextValue = {\n  baseId: string;\n  value?: string;\n  onValueChange: (value: string) => void;\n  orientation?: TabsProps['orientation'];\n  dir?: TabsProps['dir'];\n  activationMode?: TabsProps['activationMode'];\n};\n\nconst [TabsProvider, useTabsContext] = createTabsContext<TabsContextValue>(TABS_NAME);\n\ntype TabsElement = React.ElementRef<typeof Primitive.div>;\ntype RovingFocusGroupProps = Radix.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface TabsProps extends PrimitiveDivProps {\n  /** The value for the selected tab, if controlled */\n  value?: string;\n  /** The value of the tab to select by default, if uncontrolled */\n  defaultValue?: string;\n  /** A function called when a new tab is selected */\n  onValueChange?: (value: string) => void;\n  /**\n   * The orientation the tabs are layed out.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   * @defaultValue horizontal\n   */\n  orientation?: RovingFocusGroupProps['orientation'];\n  /**\n   * The direction of navigation between toolbar items.\n   */\n  dir?: RovingFocusGroupProps['dir'];\n  /**\n   * Whether a tab is activated automatically or manually.\n   * @defaultValue automatic\n   * */\n  activationMode?: 'automatic' | 'manual';\n}\n\nconst Tabs = React.forwardRef<TabsElement, TabsProps>(\n  (props: ScopedProps<TabsProps>, forwardedRef) => {\n    const {\n      __scopeTabs,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = 'horizontal',\n      dir,\n      activationMode = 'automatic',\n      ...tabsProps\n    } = props;\n    const direction = useDirection(dir);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue,\n    });\n\n    return (\n      <TabsProvider\n        scope={__scopeTabs}\n        baseId={useId()}\n        value={value}\n        onValueChange={setValue}\n        orientation={orientation}\n        dir={direction}\n        activationMode={activationMode}\n      >\n        <Primitive.div\n          dir={direction}\n          data-orientation={orientation}\n          {...tabsProps}\n          ref={forwardedRef}\n        />\n      </TabsProvider>\n    );\n  }\n);\n\nTabs.displayName = TABS_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsList\n * -----------------------------------------------------------------------------------------------*/\n\nconst TAB_LIST_NAME = 'TabsList';\n\ntype TabsListElement = React.ElementRef<typeof Primitive.div>;\ninterface TabsListProps extends PrimitiveDivProps {\n  loop?: RovingFocusGroupProps['loop'];\n}\n\nconst TabsList = React.forwardRef<TabsListElement, TabsListProps>(\n  (props: ScopedProps<TabsListProps>, forwardedRef) => {\n    const { __scopeTabs, loop = true, ...listProps } = props;\n    const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    return (\n      <RovingFocusGroup.Root\n        asChild\n        {...rovingFocusGroupScope}\n        orientation={context.orientation}\n        dir={context.dir}\n        loop={loop}\n      >\n        <Primitive.div\n          role=\"tablist\"\n          aria-orientation={context.orientation}\n          {...listProps}\n          ref={forwardedRef}\n        />\n      </RovingFocusGroup.Root>\n    );\n  }\n);\n\nTabsList.displayName = TAB_LIST_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TabsTrigger';\n\ntype TabsTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface TabsTriggerProps extends PrimitiveButtonProps {\n  value: string;\n}\n\nconst TabsTrigger = React.forwardRef<TabsTriggerElement, TabsTriggerProps>(\n  (props: ScopedProps<TabsTriggerProps>, forwardedRef) => {\n    const { __scopeTabs, value, disabled = false, ...triggerProps } = props;\n    const context = useTabsContext(TRIGGER_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return (\n      <RovingFocusGroup.Item\n        asChild\n        {...rovingFocusGroupScope}\n        focusable={!disabled}\n        active={isSelected}\n      >\n        <Primitive.button\n          type=\"button\"\n          role=\"tab\"\n          aria-selected={isSelected}\n          aria-controls={contentId}\n          data-state={isSelected ? 'active' : 'inactive'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          id={triggerId}\n          {...triggerProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              context.onValueChange(value);\n            } else {\n              // prevent focus to avoid accidental activation\n              event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if ([' ', 'Enter'].includes(event.key)) context.onValueChange(value);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => {\n            // handle \"automatic\" activation if necessary\n            // ie. activate tab following focus\n            const isAutomaticActivation = context.activationMode !== 'manual';\n            if (!isSelected && !disabled && isAutomaticActivation) {\n              context.onValueChange(value);\n            }\n          })}\n        />\n      </RovingFocusGroup.Item>\n    );\n  }\n);\n\nTabsTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TabsContent';\n\ntype TabsContentElement = React.ElementRef<typeof Primitive.div>;\ninterface TabsContentProps extends PrimitiveDivProps {\n  value: string;\n\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst TabsContent = React.forwardRef<TabsContentElement, TabsContentProps>(\n  (props: ScopedProps<TabsContentProps>, forwardedRef) => {\n    const { __scopeTabs, value, forceMount, children, ...contentProps } = props;\n    const context = useTabsContext(CONTENT_NAME, __scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    const isMountAnimationPreventedRef = React.useRef(isSelected);\n\n    React.useEffect(() => {\n      const rAF = requestAnimationFrame(() => (isMountAnimationPreventedRef.current = false));\n      return () => cancelAnimationFrame(rAF);\n    }, []);\n\n    return (\n      <Presence present={forceMount || isSelected}>\n        {({ present }) => (\n          <Primitive.div\n            data-state={isSelected ? 'active' : 'inactive'}\n            data-orientation={context.orientation}\n            role=\"tabpanel\"\n            aria-labelledby={triggerId}\n            hidden={!present}\n            id={contentId}\n            tabIndex={0}\n            {...contentProps}\n            ref={forwardedRef}\n            style={{\n              ...props.style,\n              animationDuration: isMountAnimationPreventedRef.current ? '0s' : undefined,\n            }}\n          >\n            {present && children}\n          </Primitive.div>\n        )}\n      </Presence>\n    );\n  }\n);\n\nTabsContent.displayName = CONTENT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`;\n}\n\nfunction makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`;\n}\n\nconst Root = Tabs;\nconst List = TabsList;\nconst Trigger = TabsTrigger;\nconst Content = TabsContent;\n\nexport {\n  createTabsScope,\n  //\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  //\n  Root,\n  List,\n  Trigger,\n  Content,\n};\nexport type { TabsProps, TabsListProps, TabsTriggerProps, TabsContentProps };\n"],"names":["TABS_NAME","createTabsContext","createTabsScope","createContextScope","createRovingFocusGroupScope","useRovingFocusGroupScope","TabsProvider","useTabsContext","Tabs","React","props","forwardedRef","__scopeTabs","value","valueProp","onValueChange","defaultValue","orientation","dir","activationMode","tabsProps","direction","useDirection","setValue","useControllableState","prop","onChange","defaultProp","useId","TAB_LIST_NAME","TabsList","loop","listProps","context","rovingFocusGroupScope","TRIGGER_NAME","TabsTrigger","disabled","triggerProps","triggerId","makeTriggerId","baseId","contentId","makeContentId","isSelected","undefined","composeEventHandlers","onMouseDown","event","button","ctrlKey","preventDefault","onKeyDown","includes","key","onFocus","isAutomaticActivation","CONTENT_NAME","TabsContent","forceMount","children","contentProps","isMountAnimationPreventedRef","rAF","requestAnimationFrame","current","cancelAnimationFrame","present","style","animationDuration","Root","List","Trigger","Content"],"mappings":"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"}},
    {"offset": {"line": 2348, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}