"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_src_app_components_Globe_tsx",{

/***/ "(app-pages-browser)/./src/app/components/Globe.tsx":
/*!**************************************!*\
  !*** ./src/app/components/Globe.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @amcharts/amcharts5 */ \"(app-pages-browser)/./node_modules/@amcharts/amcharts5/.internal/core/Root.js\");\n/* harmony import */ var _amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @amcharts/amcharts5 */ \"(app-pages-browser)/./node_modules/@amcharts/amcharts5/.internal/core/render/Circle.js\");\n/* harmony import */ var _amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @amcharts/amcharts5 */ \"(app-pages-browser)/./node_modules/@amcharts/amcharts5/.internal/core/util/Color.js\");\n/* harmony import */ var _amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @amcharts/amcharts5 */ \"(app-pages-browser)/./node_modules/@amcharts/amcharts5/.internal/core/render/Bullet.js\");\n/* harmony import */ var _amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @amcharts/amcharts5 */ \"(app-pages-browser)/./node_modules/@amcharts/amcharts5/.internal/core/util/Ease.js\");\n/* harmony import */ var _amcharts_amcharts5_map__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @amcharts/amcharts5/map */ \"(app-pages-browser)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapChart.js\");\n/* harmony import */ var _amcharts_amcharts5_map__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @amcharts/amcharts5/map */ \"(app-pages-browser)/./node_modules/d3-geo/src/projection/orthographic.js\");\n/* harmony import */ var _amcharts_amcharts5_map__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @amcharts/amcharts5/map */ \"(app-pages-browser)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapPolygonSeries.js\");\n/* harmony import */ var _amcharts_amcharts5_map__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @amcharts/amcharts5/map */ \"(app-pages-browser)/./node_modules/@amcharts/amcharts5/.internal/charts/map/MapPointSeries.js\");\n/* harmony import */ var _amcharts_amcharts5_geodata_worldLow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @amcharts/amcharts5-geodata/worldLow */ \"(app-pages-browser)/./node_modules/@amcharts/amcharts5-geodata/worldLow.js\");\n/* harmony import */ var _amcharts_amcharts5_themes_Animated__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @amcharts/amcharts5/themes/Animated */ \"(app-pages-browser)/./node_modules/@amcharts/amcharts5/themes/Animated.js\");\n/* harmony import */ var _components_ui_button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/ui/button */ \"(app-pages-browser)/./src/components/ui/button.tsx\");\n/* harmony import */ var _components_ui_slider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/ui/slider */ \"(app-pages-browser)/./src/components/ui/slider.tsx\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\nconst Globe = /*#__PURE__*/ _s((0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(_c = _s((param, ref)=>{\n    let { geojsonUrl, setArticleContent, onCountryClick, isBrowseMode } = param;\n    _s();\n    const chartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const polygonSeriesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const pointSeriesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [isClient, setIsClient] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isRotating, setIsRotating] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const rotationAnimationRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const chartInstanceRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [zoomLevel, setZoomLevel] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0.1);\n    const initialRotationX = 0;\n    const initialRotationY = 0;\n    const initialZoomLevel = 0.1;\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setIsClient(true);\n    }, []);\n    const startRotationAnimation = ()=>{\n        if (chartInstanceRef.current) {\n            const rotationAnimation = chartInstanceRef.current.animate({\n                key: \"rotationX\",\n                from: chartInstanceRef.current.get(\"rotationX\"),\n                to: chartInstanceRef.current.get(\"rotationX\") + 360,\n                duration: 30000,\n                loops: Infinity\n            });\n            rotationAnimationRef.current = rotationAnimation;\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(()=>{\n        if (!isClient) return;\n        const root = _amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_5__.Root.new(\"chartdiv\");\n        chartRef.current = root;\n        root.setThemes([\n            _amcharts_amcharts5_themes_Animated__WEBPACK_IMPORTED_MODULE_6__[\"default\"].new(root)\n        ]);\n        const chart = root.container.children.push(_amcharts_amcharts5_map__WEBPACK_IMPORTED_MODULE_7__.MapChart.new(root, {\n            panX: \"rotateX\",\n            panY: \"rotateY\",\n            projection: _amcharts_amcharts5_map__WEBPACK_IMPORTED_MODULE_8__[\"default\"](),\n            homeGeoPoint: {\n                longitude: initialRotationX,\n                latitude: initialRotationY\n            },\n            homeZoomLevel: initialZoomLevel,\n            wheelY: \"zoom\"\n        }));\n        chartInstanceRef.current = chart;\n        const polygonSeries = chart.series.push(_amcharts_amcharts5_map__WEBPACK_IMPORTED_MODULE_9__.MapPolygonSeries.new(root, {\n            geoJSON: _amcharts_amcharts5_geodata_worldLow__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n        }));\n        polygonSeriesRef.current = polygonSeries;\n        const pointSeries = chart.series.push(_amcharts_amcharts5_map__WEBPACK_IMPORTED_MODULE_10__.MapPointSeries.new(root, {\n            autoScale: true\n        }));\n        pointSeriesRef.current = pointSeries;\n        fetch(geojsonUrl).then((response)=>response.json()).then((data)=>{\n            pointSeries.data.setAll(data.features.map((feature)=>({\n                    geometry: feature.geometry,\n                    title: feature.properties.location,\n                    articles: feature.properties.articles\n                })));\n        }).catch((error)=>console.error(\"Error fetching GeoJSON data:\", error));\n        pointSeries.bullets.push(function() {\n            const circle = _amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_11__.Circle.new(root, {\n                radius: 3,\n                fill: _amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_12__.color(0xff0000),\n                tooltipText: \"{title}\\n{articles[0].headline}\"\n            });\n            circle.events.on(\"click\", function(ev) {\n                const dataItem = ev.target.dataItem;\n                const articles = dataItem.dataContext.articles;\n                const articleContent = articles.map((article)=>'<a href=\"'.concat(article.url, '\" target=\"_blank\">').concat(article.headline, \"</a>\")).join(\"<br/>\");\n                const content = \"<div><strong>\".concat(dataItem.dataContext.title, \"</strong><br/>\").concat(articleContent, \"</div>\");\n                setArticleContent(content);\n                onCountryClick(dataItem.dataContext.title);\n            });\n            circle.states.create(\"hover\", {\n                fill: _amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_12__.color(0x0000ff)\n            });\n            return _amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_13__.Bullet.new(root, {\n                sprite: circle\n            });\n        });\n        polygonSeries.mapPolygons.template.setAll({\n            tooltipText: \"{name}\",\n            toggleKey: \"active\",\n            interactive: true\n        });\n        polygonSeries.mapPolygons.template.states.create(\"hover\", {\n            fill: _amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_12__.color(0x0000ff)\n        });\n        polygonSeries.mapPolygons.template.states.create(\"active\", {\n            fill: _amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_12__.color(0x0000ff)\n        });\n        let previousPolygon = null;\n        polygonSeries.mapPolygons.template.on(\"active\", async (active, target)=>{\n            if (previousPolygon && previousPolygon !== target) {\n                previousPolygon.set(\"active\", false);\n            }\n            if (target.get(\"active\")) {\n                const centroid = target.geoCentroid();\n                if (centroid) {\n                    chart.animate({\n                        key: \"rotationX\",\n                        to: -centroid.longitude,\n                        duration: 1500,\n                        easing: _amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_14__.inOut(_amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_14__.cubic)\n                    });\n                    chart.animate({\n                        key: \"rotationY\",\n                        to: -centroid.latitude,\n                        duration: 1500,\n                        easing: _amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_14__.inOut(_amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_14__.cubic)\n                    });\n                }\n                const countryName = target.dataItem.dataContext.name;\n                await handleCountrySelection(centroid.latitude, centroid.longitude, countryName);\n                // Move the mover element to the centroid position\n                const mover = document.getElementById(\"mover\");\n                if (mover) {\n                    mover.style.transform = \"translate(\".concat(centroid.longitude, \"px, \").concat(centroid.latitude, \"px)\");\n                }\n            }\n            previousPolygon = target;\n        });\n        polygonSeries.events.on(\"datavalidated\", function() {\n            chart.goHome();\n        });\n        startRotationAnimation();\n        return ()=>{\n            root.dispose();\n        };\n    }, [\n        geojsonUrl,\n        isClient\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(ref, ()=>({\n            zoomToCountry: async (latitude, longitude, countryName)=>{\n                if (chartInstanceRef.current) {\n                    chartInstanceRef.current.animate({\n                        key: \"rotationX\",\n                        to: -longitude,\n                        duration: 1500,\n                        easing: _amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_14__.inOut(_amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_14__.cubic)\n                    });\n                    chartInstanceRef.current.animate({\n                        key: \"rotationY\",\n                        to: -latitude,\n                        duration: 1500,\n                        easing: _amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_14__.inOut(_amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_14__.cubic)\n                    });\n                    chartInstanceRef.current.zoomToGeoPoint({\n                        latitude,\n                        longitude\n                    }, 1.5);\n                    if (rotationAnimationRef.current) {\n                        rotationAnimationRef.current.stop();\n                    }\n                    setTimeout(()=>{\n                        if (isRotating) {\n                            startRotationAnimation();\n                        }\n                    }, 1600);\n                    await handleCountrySelection(latitude, longitude, countryName);\n                }\n            },\n            loadGeoJSON: ()=>{\n                fetch(geojsonUrl).then((response)=>response.json()).then((data)=>{\n                    pointSeriesRef.current.data.setAll(data.features.map((feature)=>({\n                            geometry: feature.geometry,\n                            title: feature.properties.location,\n                            articles: feature.properties.articles\n                        })));\n                }).catch((error)=>console.error(\"Error fetching GeoJSON data:\", error));\n            }\n        }));\n    const fetchWikipediaContent = async (countryName)=>{\n        try {\n            const response = await fetch(\"https://en.wikipedia.org/api/rest_v1/page/summary/\".concat(countryName));\n            const data = await response.json();\n            return data.extract ? \"<div><strong>\".concat(countryName, \"</strong><br>\").concat(data.extract, \"</div>\") : \"<div><strong>\".concat(countryName, \"</strong>: No information available.</div>\");\n        } catch (error) {\n            console.error(\"Error fetching Wikipedia content:\", error);\n            return \"<div><strong>\".concat(countryName, \"</strong>: Error fetching information.</div>\");\n        }\n    };\n    const handleCountrySelection = async (latitude, longitude, countryName)=>{\n        const content = await fetchWikipediaContent(countryName);\n        setArticleContent(content);\n        onCountryClick(countryName);\n        // Fetch leader info for the selected country\n        const leaderInfoUrl = \"http://localhost:8000/api/leaders/\".concat(countryName, \"/\");\n        try {\n            const leaderResponse = await axios__WEBPACK_IMPORTED_MODULE_15__[\"default\"].get(leaderInfoUrl);\n            console.log(\"Leader info:\", leaderResponse.data);\n        // setLeaderInfo(leaderResponse.data); // Update leader info state\n        } catch (error) {\n            console.error(\"Error fetching leader info:\", error);\n        }\n    };\n    const handlePlayPause = ()=>{\n        if (rotationAnimationRef.current) {\n            if (isRotating) {\n                rotationAnimationRef.current.pause();\n            } else {\n                rotationAnimationRef.current.play();\n            }\n            setIsRotating(!isRotating);\n        } else {\n            startRotationAnimation();\n            setIsRotating(true);\n        }\n    };\n    const handleHome = ()=>{\n        if (chartInstanceRef.current) {\n            if (rotationAnimationRef.current) {\n                rotationAnimationRef.current.stop();\n            }\n            chartInstanceRef.current.animate({\n                key: \"rotationX\",\n                to: -initialRotationX,\n                duration: 1500,\n                easing: _amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_14__.inOut(_amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_14__.cubic)\n            });\n            chartInstanceRef.current.animate({\n                key: \"rotationY\",\n                to: -initialRotationY,\n                duration: 1500,\n                easing: _amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_14__.inOut(_amcharts_amcharts5__WEBPACK_IMPORTED_MODULE_14__.cubic)\n            });\n            chartInstanceRef.current.zoomToGeoPoint({\n                latitude: initialRotationY,\n                longitude: initialRotationX\n            }, initialZoomLevel);\n            setTimeout(()=>{\n                if (isRotating) {\n                    startRotationAnimation();\n                }\n            }, 1600);\n        }\n    };\n    const handleResume = ()=>{\n        if (chartInstanceRef.current) {\n            chartInstanceRef.current.goHome();\n            if (rotationAnimationRef.current) {\n                rotationAnimationRef.current.stop();\n            }\n            setTimeout(()=>{\n                if (isRotating) {\n                    startRotationAnimation();\n                }\n            }, 1600);\n        }\n    };\n    const handleZoomChange = (value)=>{\n        const zoomValue = value[0];\n        setZoomLevel(zoomValue);\n        if (chartInstanceRef.current) {\n            chartInstanceRef.current.zoomToGeoPoint({\n                latitude: initialRotationY,\n                longitude: initialRotationX\n            }, zoomValue);\n        }\n    };\n    if (!isClient) return null;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                id: \"chartdiv\",\n                className: \"\",\n                style: {\n                    width: \"100%\",\n                    height: \"400px\",\n                    marginTop: \"20px\"\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    id: \"mover\",\n                    className: \"absolute bottom-0 left-0 w-12 h-12 bg-white dark:bg-zinc-900 text-zinc-100\"\n                }, void 0, false, {\n                    fileName: \"/root/open-politics/open_politics_project/frontend/next-generation-interface/src/app/components/Globe.tsx\",\n                    lineNumber: 286,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/root/open-politics/open_politics_project/frontend/next-generation-interface/src/app/components/Globe.tsx\",\n                lineNumber: 285,\n                columnNumber: 7\n            }, undefined),\n            isBrowseMode && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute top-0 left-0 flex gap-2 pt-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_3__.Button, {\n                        className: \"mt-2\",\n                        variant: \"outline\",\n                        onClick: handlePlayPause,\n                        children: isRotating ? \"Pause\" : \"Play\"\n                    }, void 0, false, {\n                        fileName: \"/root/open-politics/open_politics_project/frontend/next-generation-interface/src/app/components/Globe.tsx\",\n                        lineNumber: 290,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_3__.Button, {\n                        className: \"mt-2\",\n                        variant: \"outline\",\n                        onClick: handleHome,\n                        children: \"Home/Restart\"\n                    }, void 0, false, {\n                        fileName: \"/root/open-politics/open_politics_project/frontend/next-generation-interface/src/app/components/Globe.tsx\",\n                        lineNumber: 293,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_3__.Button, {\n                        className: \"mt-2\",\n                        variant: \"outline\",\n                        onClick: handleResume,\n                        children: \"Reset\"\n                    }, void 0, false, {\n                        fileName: \"/root/open-politics/open_politics_project/frontend/next-generation-interface/src/app/components/Globe.tsx\",\n                        lineNumber: 296,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex items-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"text-white bg-transparent ml-2\",\n                                children: \"+ -\"\n                            }, void 0, false, {\n                                fileName: \"/root/open-politics/open_politics_project/frontend/next-generation-interface/src/app/components/Globe.tsx\",\n                                lineNumber: 300,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_slider__WEBPACK_IMPORTED_MODULE_4__.Slider, {\n                                value: [\n                                    zoomLevel\n                                ],\n                                onValueChange: handleZoomChange,\n                                min: 0.4,\n                                max: 3,\n                                step: 0.35,\n                                className: \"w-32\"\n                            }, void 0, false, {\n                                fileName: \"/root/open-politics/open_politics_project/frontend/next-generation-interface/src/app/components/Globe.tsx\",\n                                lineNumber: 301,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/root/open-politics/open_politics_project/frontend/next-generation-interface/src/app/components/Globe.tsx\",\n                        lineNumber: 299,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/root/open-politics/open_politics_project/frontend/next-generation-interface/src/app/components/Globe.tsx\",\n                lineNumber: 289,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/root/open-politics/open_politics_project/frontend/next-generation-interface/src/app/components/Globe.tsx\",\n        lineNumber: 284,\n        columnNumber: 5\n    }, undefined);\n}, \"pvplB4Otv68HJooU0Yf0O2XaORU=\")), \"pvplB4Otv68HJooU0Yf0O2XaORU=\");\n_c1 = Globe;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Globe);\nvar _c, _c1;\n$RefreshReg$(_c, \"Globe$forwardRef\");\n$RefreshReg$(_c1, \"Globe\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/components/Globe.tsx\n"));

/***/ })

});